(function(c) {
  c.color = {};
  c.color.make = function(e, q, a, d) {
    var b = {};
    b.r = e || 0;
    b.g = q || 0;
    b.b = a || 0;
    b.a = null != d ? d : 1;
    b.add = function(c, a) {
      for (var d = 0; d < c.length; ++d)
        b[c.charAt(d)] += a;
      return b.normalize()
    };
    b.scale = function(c, a) {
      for (var d = 0; d < c.length; ++d)
        b[c.charAt(d)] *= a;
      return b.normalize()
    };
    b.toString = function() {
      return 1 <= b.a ? "rgb(" + [b.r, b.g, b.b].join() + ")" : "rgba(" + [b.r, b.g, b.b, b.a].join() + ")"
    };
    b.normalize = function() {
      function c(a, d, b) {
        return d < a ? a : d > b ? b : d
      }
      b.r = c(0, parseInt(b.r), 255);
      b.g = c(0, parseInt(b.g), 255);
      b.b = c(0, parseInt(b.b), 255);
      b.a = c(0, b.a, 1);
      return b
    };
    b.clone = function() {
      return c.color.make(b.r, b.b, b.g, b.a)
    };
    return b.normalize()
  };
  c.color.extract = function(e, q) {
    var a;
    do {
      a = e.css(q).toLowerCase();
      if ("" != a && "transparent" != a)
        break;
      e = e.parent()
    } while(!c.nodeName(e.get(0),"body"));
    "rgba(0, 0, 0, 0)" == a && ( a = "transparent");
    return c.color.parse(a)
  };
  c.color.parse = function(w) {
    var q, a = c.color.make;
    if ( q = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(w))
      return a(parseInt(q[1], 10), parseInt(q[2], 10), parseInt(q[3], 10));
    if ( q = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(w))
      return a(parseInt(q[1], 10), parseInt(q[2], 10), parseInt(q[3], 10), parseFloat(q[4]));
    if ( q = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(w))
      return a(2.55 * parseFloat(q[1]), 2.55 * parseFloat(q[2]), 2.55 * parseFloat(q[3]));
    if ( q = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(w))
      return a(2.55 * parseFloat(q[1]), 2.55 * parseFloat(q[2]), 2.55 * parseFloat(q[3]), parseFloat(q[4]));
    if ( q = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(w))
      return a(parseInt(q[1], 16), parseInt(q[2], 16), parseInt(q[3], 16));
    if ( q = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(w))
      return a(parseInt(q[1] + q[1], 16), parseInt(q[2] + q[2], 16), parseInt(q[3] + q[3], 16));
    w = c.trim(w).toLowerCase();
    if ("transparent" == w)
      return a(255, 255, 255, 0);
    q = e[w] || [0, 0, 0];
    return a(q[0], q[1], q[2])
  };
  var e = {
    aqua : [0, 255, 255],
    azure : [240, 255, 255],
    beige : [245, 245, 220],
    black : [0, 0, 0],
    blue : [0, 0, 255],
    brown : [165, 42, 42],
    cyan : [0, 255, 255],
    darkblue : [0, 0, 139],
    darkcyan : [0, 139, 139],
    darkgrey : [169, 169, 169],
    darkgreen : [0, 100, 0],
    darkkhaki : [189, 183, 107],
    darkmagenta : [139, 0, 139],
    darkolivegreen : [85, 107, 47],
    darkorange : [255, 140, 0],
    darkorchid : [153, 50, 204],
    darkred : [139, 0, 0],
    darksalmon : [233, 150, 122],
    darkviolet : [148, 0, 211],
    fuchsia : [255, 0, 255],
    gold : [255, 215, 0],
    green : [0, 128, 0],
    indigo : [75, 0, 130],
    khaki : [240, 230, 140],
    lightblue : [173, 216, 230],
    lightcyan : [224, 255, 255],
    lightgreen : [144, 238, 144],
    lightgrey : [211, 211, 211],
    lightpink : [255, 182, 193],
    lightyellow : [255, 255, 224],
    lime : [0, 255, 0],
    magenta : [255, 0, 255],
    maroon : [128, 0, 0],
    navy : [0, 0, 128],
    olive : [128, 128, 0],
    orange : [255, 165, 0],
    pink : [255, 192, 203],
    purple : [128, 0, 128],
    violet : [128, 0, 128],
    red : [255, 0, 0],
    silver : [192, 192, 192],
    white : [255, 255, 255],
    yellow : [255, 255, 0]
  }
})(jQuery);
(function(c) {
  function e(e, a, d, b) {
    function k(c, a) {
      for (var a = [F].concat(a), u = 0; u < c.length; ++u)
        c[u].apply(this, a)
    }

    function f(a) {
      for (var d = [], u = 0; u < a.length; ++u) {
        var p = c.extend(!0, {}, g.series);
        null != a[u].data ? (p.data = a[u].data,
        delete a[u].data, c.extend(!0, p, a[u]), a[u].data = p.data) : p.data = a[u];
        d.push(p)
      }
      l = d;
      d = l.length;
      u = [];
      p = [];
      for ( a = 0; a < l.length; ++a) {
        var o = l[a].color;
        null != o && (--d, "number" == typeof o ? p.push(o) : u.push(c.color.parse(l[a].color)))
      }
      for ( a = 0; a < p.length; ++a)
        d = Math.max(d, p[a] + 1);
      u = [];
      for ( a = p = 0; u.length < d; )
        o = g.colors.length == a ? c.color.make(100, 100, 100) : c.color.parse(g.colors[a]), o.scale("rgb", 1 + 0.2 * (1 == p % 2 ? -1 : 1) * Math.ceil(p / 2)), u.push(o), ++a, a >= g.colors.length && ( a = 0, ++p);
      for ( a = d = 0; a < l.length; ++a) {
        p = l[a];
        if (null == p.color)
          p.color = u[d].toString(), ++d;
        else if ("number" == typeof p.color)
          p.color = u[p.color].toString();
        if (null == p.lines.show) {
          var b, o = !0;
          for (b in p)
          if (p[b] && p[b].show) {
            o = !1;
            break
          }
          if (o)
            p.lines.show = !0
        }
        p.xaxis = D(E, I(p, "x"));
        p.yaxis = D(B, I(p, "y"))
      }
      z()
    }

    function I(a, c) {
      var d = a[c + "axis"];
      if ("object" == typeof d)
        d = d.n;
      "number" != typeof d && ( d = 1);
      return d
    }

    function x() {
      return c.grep(E.concat(B), function(a) {
        return a
      })
    }

    function fa(a) {
      var c = {}, d, p;
      for ( d = 0; d < E.length; ++d)
        ( p = E[d]) && p.used && (c["x" + p.n] = p.c2p(a.left));
      for ( d = 0; d < B.length; ++d)
        ( p = B[d]) && p.used && (c["y" + p.n] = p.c2p(a.top));
      if (
        void 0 !== c.x1)
        c.x = c.x1;
      if (
        void 0 !== c.y1)
        c.y = c.y1;
      return c
    }

    function D(a, d) {
      a[d - 1] || (a[d - 1] = {
        n : d,
        direction : a == E ? "x" : "y",
        options : c.extend(!0, {}, a == E ? g.xaxis : g.yaxis)
      });
      return a[d - 1]
    }

    function z() {
      function a(c, C, d) {
        if (C < c.datamin && C != -p)
          c.datamin = C;
        if (d > c.datamax && d != p)
          c.datamax = d
      }

      var d = Number.POSITIVE_INFINITY, g = Number.NEGATIVE_INFINITY, p = Number.MAX_VALUE, o, b, h, K, A, m, U, e, f, n;
      c.each(x(), function(a, c) {
        c.datamin = d;
        c.datamax = g;
        c.used = !1
      });
      for ( o = 0; o < l.length; ++o)
        A = l[o], A.datapoints = {
          points : []
        }, k(ba.processRawData, [A, A.data, A.datapoints]);
      for ( o = 0; o < l.length; ++o) {
        A = l[o];
        var y = A.data, s = A.datapoints.format;
        if (!s) {
          s = [];
          s.push({
            x : !0,
            number : !0,
            required : !0
          });
          s.push({
            y : !0,
            number : !0,
            required : !0
          });
          if (A.bars.show || A.lines.show && A.lines.fill)
            if (s.push({
                y : !0,
                number : !0,
                required : !1,
                defaultValue : 0
              }), A.bars.horizontal)
              delete s[s.length - 1].y, s[s.length - 1].x = !0;
          A.datapoints.format = s
        }
        if (null == A.datapoints.pointsize) {
          A.datapoints.pointsize = s.length;
          U = A.datapoints.pointsize;
          m = A.datapoints.points;
          insertSteps = A.lines.show && A.lines.steps;
          A.xaxis.used = A.yaxis.used = !0;
          for ( b = h = 0; b < y.length; ++b, h += U) {
            n = y[b];
            var la = null == n;
            if (!la)
              for ( K = 0; K < U; ++K) {
                e = n[K];
                if ( f = s[K])
                  if (f.number && null != e && ( e = +e, isNaN(e) ? e = null : Infinity == e ? e = p : -Infinity == e && ( e = -p)), null == e && (f.required && ( la = !0), null != f.defaultValue))
                    e = f.defaultValue;
                m[h + K] = e
              }
            if (la)
              for ( K = 0; K < U; ++K)
                e = m[h + K], null != e && ( f = s[K], f.x && a(A.xaxis, e, e), f.y && a(A.yaxis, e, e)), m[h + K] = null;
            else if (insertSteps && 0 < h && null != m[h - U] && m[h - U] != m[h] && m[h - U + 1] != m[h + 1]) {
              for ( K = 0; K < U; ++K)
                m[h + U + K] = m[h + K];
              m[h + 1] = m[h - U + 1];
              h += U
            }
          }
        }
      }
      for ( o = 0; o < l.length; ++o)
        A = l[o], k(ba.processDatapoints, [A, A.datapoints]);
      for ( o = 0; o < l.length; ++o) {
        A = l[o];
        m = A.datapoints.points;
        U = A.datapoints.pointsize;
        n = h = d;
        la = y = g;
        for ( b = 0; b < m.length; b += U)
          if (null != m[b])
            for ( K = 0; K < U; ++K)
              if ( e = m[b + K], ( f = s[K]) && !(e == p || e == -p))
                f.x && (e < h && ( h = e), e > y && ( y = e)), f.y && (e < n && ( n = e), e > la && ( la = e));
        A.bars.show && ( b = "left" == A.bars.align ? 0 : -A.bars.barWidth / 2, A.bars.horizontal ? (n += b, la += b + A.bars.barWidth) : (h += b, y += b + A.bars.barWidth));
        a(A.xaxis, h, y);
        a(A.yaxis, n, la)
      }
      c.each(x(), function(a, c) {
        if (c.datamin == d)
          c.datamin = null;
        if (c.datamax == g)
          c.datamax = null
      })
    }

    function s(a, d) {
      var g = document.createElement("canvas");
      g.className = d;
      g.width = G;
      g.height = aa;
      a || c(g).css({
        position : "absolute",
        left : 0,
        top : 0
      });
      c(g).appendTo(e);
      g.getContext || ( g = window.G_vmlCanvasManager.initElement(g));
      g.getContext("2d").save();
      return g
    }

    function r() {
      G = e.width();
      aa = e.height();
      if (0 >= G || 0 >= aa)
        throw "Invalid dimensions for plot, width = " + G + ", height = " + aa;
    }

    function ga(a) {
      if (a.width != G)
        a.width = G;
      if (a.height != aa)
        a.height = aa;
      a = a.getContext("2d");
      a.restore();
      a.save()
    }

    function ha(a) {
      function c(a) {
        return a
      }

      var d, g, o = a.options.transform || c, b = a.options.inverseTransform;
      "x" == a.direction ? ( d = a.scale = ma / Math.abs(o(a.max) - o(a.min)), g = Math.min(o(a.max), o(a.min))) : ( d = a.scale = ea / Math.abs(o(a.max) - o(a.min)), d = -d, g = Math.max(o(a.max), o(a.min)));
      a.p2c = o == c ? function(a) {
        return (a - g) * d
      } : function(a) {
        return (o(a) - g) * d
      };
      a.c2p = b ? function(a) {
        return b(g + a / d)
      } : function(a) {
        return g + a / d
      }
    }

    function n(a) {
      function d(g, b) {
        return c('<div style="position:absolute;top:-10000px;' + b + 'font-size:smaller"><div class="' + a.direction + "Axis " + a.direction + a.n + 'Axis">' + g.join("") + "</div></div>").appendTo(e)
      }

      var g = a.options, p, o = a.ticks || [], b = [], h, l = g.labelWidth, g = g.labelHeight;
      if ("x" == a.direction) {
        if (null == l && ( l = Math.floor(G / (0 < o.length ? o.length : 1))), null == g) {
          b = [];
          for ( p = 0; p < o.length; ++p)
            ( h = o[p].label) && b.push('<div class="tickLabel" style="float:left;width:' + l + 'px">' + h + "</div>");
          0 < b.length && (b.push('<div style="clear:left"></div>'), o = d(b, "width:10000px;"), g = o.height(), o.remove())
        }
      } else if (null == l || null == g) {
        for ( p = 0; p < o.length; ++p)
          ( h = o[p].label) && b.push('<div class="tickLabel">' + h + "</div>");
        0 < b.length && ( o = d(b, ""), null == l && ( l = o.children().width()), null == g && ( g = o.find("div.tickLabel").height()), o.remove())
      }
      null == l && ( l = 0);
      null == g && ( g = 0);
      a.labelWidth = l;
      a.labelHeight = g
    }

    function sa(a) {
      var d = a.labelWidth, b = a.labelHeight, p = a.options.position, o = a.options.tickLength, h = g.grid.axisMargin, l = g.grid.labelMargin, m = "x" == a.direction ? E : B, e = c.grep(m, function(a) {
        return a && a.options.position == p && a.reserveSpace
      });
      c.inArray(a, e) == e.length - 1 && ( h = 0);
      null == o && ( o = "full");
      m = c.grep(m, function(a) {
        return a && a.reserveSpace
      });
      m = 0 == c.inArray(a, m);
      !m && "full" == o && ( o = 5);
      isNaN(+o) || (l += +o);
      "x" == a.direction ? (b += l, "bottom" == p ? (v.bottom += b + h, a.box = {
        top : aa - v.bottom,
        height : b
      }) : (a.box = {
        top : v.top + h,
        height : b
      }, v.top += b + h)) : (d += l, "left" == p ? (a.box = {
        left : v.left + h,
        width : d
      }, v.left += d + h) : (v.right += d + h, a.box = {
        left : G - v.right,
        width : d
      }));
      a.position = p;
      a.tickLength = o;
      a.box.padding = l;
      a.innermost = m
    }

    function na() {
      var a, d = x();
      c.each(d, function(a, c) {
        c.show = c.options.show;
        if (null == c.show)
          c.show = c.used;
        c.reserveSpace = c.show || c.options.reserveSpace;
        var d = c.options, g = +(null != d.min ? d.min : c.datamin), b = +(null != d.max ? d.max : c.datamax), C = b - g;
        if (0 == C) {
          if ( C = 0 == b ? 1 : 0.01, null == d.min && (g -= C), null == d.max || null != d.min)
            b += C
        } else {
          var h = d.autoscaleMargin;
          null != h && (null == d.min && (g -= C * h, 0 > g && null != c.datamin && 0 <= c.datamin && ( g = 0)), null == d.max && (b += C * h, 0 < b && null != c.datamax && 0 >= c.datamax && ( b = 0)))
        }
        c.min = g;
        c.max = b
      });
      allocatedAxes = c.grep(d, function(a) {
        return a.reserveSpace
      });
      v.left = v.right = v.top = v.bottom = 0;
      if (g.grid.show) {
        c.each(allocatedAxes, function(a, d) {
          t(d);
          var g = d.options.ticks, b = [];
          null == g || "number" == typeof g && 0 < g ? b = d.tickGenerator(d) : g && ( b = c.isFunction(g) ? g({
            min : d.min,
            max : d.max
          }) : g);
          var C;
          d.ticks = [];
          for ( g = 0; g < b.length; ++g) {
            var h = null, p = b[g];
            "object" == typeof p ? ( C = +p[0], 1 < p.length && ( h = p[1])) : C = +p;
            null == h && ( h = d.tickFormatter(C, d));
            isNaN(C) || d.ticks.push({
              v : C,
              label : h
            })
          }
          b = d.ticks;
          if (d.options.autoscaleMargin && 0 < b.length) {
            if (null == d.options.min)
              d.min = Math.min(d.min, b[0].v);
            if (null == d.options.max && 1 < b.length)
              d.max = Math.max(d.max, b[b.length - 1].v)
          }
          n(d)
        });
        for ( a = allocatedAxes.length - 1; 0 <= a; --a)
          sa(allocatedAxes[a]);
        var b = g.grid.minBorderMargin;
        if (null == b)
          for ( a = b = 0; a < l.length; ++a)
            b = Math.max(b, l[a].points.radius + l[a].points.lineWidth / 2);
        for (var h in v)v[h] += g.grid.borderWidth, v[h] = Math.max(b, v[h])
      }
      ma = G - v.left - v.right;
      ea = aa - v.bottom - v.top;
      c.each(d, function(a, c) {
        ha(c)
      });
      g.grid.show && (c.each(allocatedAxes, function(a, c) {
        "x" == c.direction ? (c.box.left = v.left, c.box.width = ma) : (c.box.top = v.top, c.box.height = ea)
      }), qa());
      L()
    }

    function t(a) {
      var d = a.options, g;
      g = "number" == typeof d.ticks && 0 < d.ticks ? d.ticks : 0.3 * Math.sqrt("x" == a.direction ? G : aa);
      g = (a.max - a.min) / g;
      var b, h, l, m;
      if ("time" == d.mode) {
        var e = {
          second : 1E3,
          minute : 6E4,
          hour : 36E5,
          day : 864E5,
          month : 2592E6,
          year : 525949.2 * 6E4
        };
        m = [[1, "second"], [2, "second"], [5, "second"], [10, "second"], [30, "second"], [1, "minute"], [2, "minute"], [5, "minute"], [10, "minute"], [30, "minute"], [1, "hour"], [2, "hour"], [4, "hour"], [8, "hour"], [12, "hour"], [1, "day"], [2, "day"], [3, "day"], [0.25, "month"], [0.5, "month"], [1, "month"], [2, "month"], [3, "month"], [6, "month"], [1, "year"]];
        b = 0;
        null != d.minTickSize && ( b = "number" == typeof d.tickSize ? d.tickSize : d.minTickSize[0] * e[d.minTickSize[1]]);
        for ( h = 0; h < m.length - 1 && !(g < (m[h][0] * e[m[h][1]] + m[h+1][0] * e[m[h+1][1]]) / 2 && m[h][0] * e[m[h][1]] >= b); ++h);
        b = m[h][0];
        l = m[h][1];
        "year" == l && ( h = Math.pow(10, Math.floor(Math.log(g / e.year) / Math.LN10)), m = g / e.year / h, b = (1.5 > m ? 1 : 3 > m ? 2 : 7.5 > m ? 5 : 10) * h);
        a.tickSize = d.tickSize || [b, l];
        h = function(a) {
          var c = [], d = a.tickSize[0], g = a.tickSize[1], b = new Date(a.min), h = d * e[g];
          "second" == g && b.setUTCSeconds(w(b.getUTCSeconds(), d));
          "minute" == g && b.setUTCMinutes(w(b.getUTCMinutes(), d));
          "hour" == g && b.setUTCHours(w(b.getUTCHours(), d));
          "month" == g && b.setUTCMonth(w(b.getUTCMonth(), d));
          "year" == g && b.setUTCFullYear(w(b.getUTCFullYear(), d));
          b.setUTCMilliseconds(0);
          h >= e.minute && b.setUTCSeconds(0);
          h >= e.hour && b.setUTCMinutes(0);
          h >= e.day && b.setUTCHours(0);
          h >= 4 * e.day && b.setUTCDate(1);
          h >= e.year && b.setUTCMonth(0);
          var C = 0, l = Number.NaN, p;
          do
            if ( p = l, l = b.getTime(), c.push(l), "month" == g)
              if (1 > d) {
                b.setUTCDate(1);
                var o = b.getTime();
                b.setUTCMonth(b.getUTCMonth() + 1);
                var u = b.getTime();
                b.setTime(l + C * e.hour + (u - o) * d);
                C = b.getUTCHours();
                b.setUTCHours(0)
              } else
                b.setUTCMonth(b.getUTCMonth() + d);
            else
              "year" == g ? b.setUTCFullYear(b.getUTCFullYear() + d) : b.setTime(l + h);
          while(l<a.max&&l!=p);
          return c
        };
        b = function(a, b) {
          var g = new Date(a);
          if (null != d.timeformat)
            return c.plot.formatDate(g, d.timeformat, d.monthNames);
          var h = b.tickSize[0] * e[b.tickSize[1]], C = b.max - b.min, l = d.twelveHourClock ? " %p" : "";
          fmt = h < e.minute ? "%h:%M:%S" + l : h < e.day ? C < 2 * e.day ? "%h:%M" + l : "%b %d %h:%M" + l : h < e.month ? "%b %d" : h < e.year ? C < e.year ? "%b" : "%b %y" : "%y";
          return c.plot.formatDate(g, fmt, d.monthNames)
        }
      } else {
        l = d.tickDecimals;
        var k = -Math.floor(Math.log(g) / Math.LN10);
        null != l && k > l && ( k = l);
        h = Math.pow(10, -k);
        m = g / h;
        if (1.5 > m)
          b = 1;
        else if (3 > m) {
          if ( b = 2, 2.25 < m && (null == l || k + 1 <= l))
            b = 2.5, ++k
        } else
          b = 7.5 > m ? 5 : 10;
        b *= h;
        if (null != d.minTickSize && b < d.minTickSize)
          b = d.minTickSize;
        a.tickDecimals = Math.max(0, null != l ? l : k);
        a.tickSize = d.tickSize || b;
        h = function(a) {
          var c = [], d = w(a.min, a.tickSize), b = 0, g = Number.NaN, h;
          do h = g, g = d + b * a.tickSize, c.push(g), ++b;
          while(g<a.max&&g!=h);
          return c
        };
        b = function(a, c) {
          return a.toFixed(c.tickDecimals)
        }
      }
      if (null != d.alignTicksWithAxis) {
        var f = ("x"==a.direction?
        E:B)[d.alignTicksWithAxis - 1];
        if (f && f.used && f != a) {
          h = h(a);
          if (0 < h.length) {
            if (null == d.min)
              a.min = Math.min(a.min, h[0]);
            if (null == d.max && 1 < h.length)
              a.max = Math.max(a.max, h[h.length - 1])
          }
          h = function(a) {
            var c = [], d, b;
            for ( b = 0; b < f.ticks.length; ++b)
              d = (f.ticks[b].v - f.min) / (f.max - f.min), d = a.min + d * (a.max - a.min), c.push(d);
            return c
          };
          if ("time" != a.mode && null == d.tickDecimals && ( g = Math.max(0, -Math.floor(Math.log(g) / Math.LN10) + 1), m = h(a), !(1 < m.length && /\..*0$/.test((m[1] - m[0]).toFixed(g)))))
            a.tickDecimals = g
        }
      }
      a.tickGenerator = h;
      a.tickFormatter = c.isFunction(d.tickFormatter) ? function(a, c) {
        return "" + d.tickFormatter(a, c)
      } : b
    }

    function V() {
      m.clearRect(0, 0, G, aa);
      var a = g.grid;
      if (a.show && a.backgroundColor)
        m.save(), m.translate(v.left, v.top), m.fillStyle = h(g.grid.backgroundColor, ea, 0, "rgba(255, 255, 255, 0)"), m.fillRect(0, 0, ma, ea), m.restore();
      a.show && !a.aboveData && oa();
      for (var c = 0; c < l.length; ++c) {
        k(ba.drawSeries, [m, l[c]]);
        var d = l[c];
        d.lines.show && ia(d);
        d.bars.show && ja(d);
        d.points.show && pa(d)
      }
      k(ba.draw, [m]);
      a.show && a.aboveData && oa()
    }

    function J(a, c) {
      var d, b, g, h, l = x();
      for ( i = 0; i < l.length; ++i)
        if ( d = l[i], d.direction == c && ( h = c + d.n + "axis", !a[h] && 1 == d.n && ( h = c + "axis"), a[h])) {
          b = a[h].from;
          g = a[h].to;
          break
        }
      a[h] || ( d = "x" == c ? E[0] : B[0], b = a[c + "1"], g = a[c + "2"]);
      null != b && null != g && b > g && ( h = b, b = g, g = h);
      return {
        from : b,
        to : g,
        axis : d
      }
    }

    function oa() {
      var a;
      m.save();
      m.translate(v.left, v.top);
      var d = g.grid.markings;
      if (d) {
        if (c.isFunction(d)) {
          var b = F.getAxes();
          b.xmin = b.xaxis.min;
          b.xmax = b.xaxis.max;
          b.ymin = b.yaxis.min;
          b.ymax = b.yaxis.max;
          d = d(b)
        }
        for ( a = 0; a < d.length; ++a) {
          var b = d[a], h = J(b, "x"), l = J(b, "y");
          if (null == h.from)
            h.from = h.axis.min;
          if (null == h.to)
            h.to = h.axis.max;
          if (null == l.from)
            l.from = l.axis.min;
          if (null == l.to)
            l.to = l.axis.max;
          if (!(h.to < h.axis.min || h.from > h.axis.max || l.to < l.axis.min || l.from > l.axis.max))
            if (h.from = Math.max(h.from, h.axis.min), h.to = Math.min(h.to, h.axis.max), l.from = Math.max(l.from, l.axis.min), l.to = Math.min(l.to, l.axis.max), !(h.from == h.to && l.from == l.to))
              h.from = h.axis.p2c(h.from), h.to = h.axis.p2c(h.to), l.from = l.axis.p2c(l.from), l.to = l.axis.p2c(l.to), h.from == h.to || l.from == l.to ? (m.beginPath(), m.strokeStyle = b.color || g.grid.markingsColor, m.lineWidth = b.lineWidth || g.grid.markingsLineWidth, m.moveTo(h.from, l.from), m.lineTo(h.to, l.to), m.stroke()) : (m.fillStyle = b.color || g.grid.markingsColor, m.fillRect(h.from, l.to, h.to - h.from, l.from - l.to))
        }
      }
      b = x();
      d = g.grid.borderWidth;
      for ( h = 0; h < b.length; ++h) {
        l = b[h];
        a = l.box;
        var e = l.tickLength, f, k, A, n;
        if (l.show && 0 != l.ticks.length) {
          m.strokeStyle = l.options.tickColor || c.color.parse(l.options.color).scale("a", 0.22).toString();
          m.lineWidth = 1;
          "x" == l.direction ? ( f = 0, k = "full" == e ? "top" == l.position ? 0 : ea : a.top - v.top + ("top" == l.position ? a.height : 0)) : ( k = 0, f = "full" == e ? "left" == l.position ? 0 : ma : a.left - v.left + ("left" == l.position ? a.width : 0));
          l.innermost || (m.beginPath(), A = n = 0, "x" == l.direction ? A = ma : n = ea, 1 == m.lineWidth && ( f = Math.floor(f) + 0.5, k = Math.floor(k) + 0.5), m.moveTo(f, k), m.lineTo(f + A, k + n), m.stroke());
          m.beginPath();
          for ( a = 0; a < l.ticks.length; ++a) {
            var s = l.ticks[a].v;
            A = n = 0;
            s < l.min || s > l.max || "full" == e && 0 < d && (s == l.min || s == l.max) || ("x" == l.direction ? ( f = l.p2c(s), n = "full" == e ? -ea : e, "top" == l.position && ( n = -n)) : ( k = l.p2c(s), A = "full" == e ? -ma : e, "left" == l.position && ( A = -A)), 1 == m.lineWidth && ("x" == l.direction ? f = Math.floor(f) + 0.5 : k = Math.floor(k) + 0.5), m.moveTo(f, k), m.lineTo(f + A, k + n))
          }
          m.stroke()
        }
      }
      if (d)
        m.lineWidth = d, m.strokeStyle = g.grid.borderColor, m.strokeRect(-d / 2, -d / 2, ma + d, ea + d);
      m.restore()
    }

    function qa() {
      e.find(".tickLabels").remove();
      for (var a = ['<div class="tickLabels" style="font-size:smaller">'], c = x(), d = 0; d < c.length; ++d) {
        var b = c[d], h = b.box;
        if (b.show) {
          a.push('<div class="' + b.direction + "Axis " + b.direction + b.n + 'Axis" style="color:' + b.options.color + '">');
          for (var g = 0; g < b.ticks.length; ++g) {
            var l = b.ticks[g];
            if (l.label && !(l.v < b.min || l.v > b.max)) {
              var m = {}, f;
              "x" == b.direction ? ( f = "center", m.left = Math.round(v.left + b.p2c(l.v) - b.labelWidth / 2), "bottom" == b.position ? m.top = h.top + h.padding : m.bottom = aa - (h.top + h.height - h.padding)) : (m.top = Math.round(v.top + b.p2c(l.v) - b.labelHeight / 2), "left" == b.position ? (m.right = G - (h.left + h.width - h.padding), f = "right") : (m.left = h.left + h.padding, f = "left"));
              m.width = b.labelWidth;
              f = ["position:absolute", "text-align:" + f];
              for (var k in m)
              f.push(k + ":" + m[k] + "px");
              a.push('<div class="tickLabel" style="' + f.join(";") + '">' + l.label + "</div>")
            }
          }
          a.push("</div>")
        }
      }
      a.push("</div>");
      e.append(a.join(""))
    }

    function ia(a) {
      function c(a, d, b, h, g) {
        var l = a.points, a = a.pointsize, C = null, e = null;
        m.beginPath();
        for (var p = a; p < l.length; p += a) {
          var f = l[p - a], k = l[p - a + 1], u = l[p], o = l[p + 1];
          if (!(null == f || null == u)) {
            if (k <= o && k < g.min) {
              if (o < g.min)
                continue;
              f = (g.min - k) / (o - k) * (u - f) + f;
              k = g.min
            } else if (o <= k && o < g.min) {
              if (k < g.min)
                continue;
              u = (g.min - k) / (o - k) * (u - f) + f;
              o = g.min
            }
            if (k >= o && k > g.max) {
              if (o > g.max)
                continue;
              f = (g.max - k) / (o - k) * (u - f) + f;
              k = g.max
            } else if (o >= k && o > g.max) {
              if (k > g.max)
                continue;
              u = (g.max - k) / (o - k) * (u - f) + f;
              o = g.max
            }
            if (f <= u && f < h.min) {
              if (u < h.min)
                continue;
              k = (h.min - f) / (u - f) * (o - k) + k;
              f = h.min
            } else if (u <= f && u < h.min) {
              if (f < h.min)
                continue;
              o = (h.min - f) / (u - f) * (o - k) + k;
              u = h.min
            }
            if (f >= u && f > h.max) {
              if (u > h.max)
                continue;
              k = (h.max - f) / (u - f) * (o - k) + k;
              f = h.max
            } else if (u >= f && u > h.max) {
              if (f > h.max)
                continue;
              o = (h.max - f) / (u - f) * (o - k) + k;
              u = h.max
            }
            (f != C || k != e) && m.moveTo(h.p2c(f) + d, g.p2c(k) + b);
            C = u;
            e = o;
            m.lineTo(h.p2c(u) + d, g.p2c(o) + b)
          }
        }
        m.stroke()
      }

      function d(a, c, b) {
        for (var h = a.points, a = a.pointsize, g = Math.min(Math.max(0, b.min), b.max), l = 0, C = !1, f = 1, e = 0, k = 0; !(0 < a && l > h.length + a); ) {
          var l = l + a, u = h[l - a], p = h[l - a + f], o = h[l], n = h[l + f];
          if (C) {
            if (0 < a && null != u && null == o) {
              k = l;
              a = -a;
              f = 2;
              continue
            }
            if (0 > a && l == e + a) {
              m.fill();
              C = !1;
              a = -a;
              f = 1;
              l = e = k + a;
              continue
            }
          }
          if (!(null == u || null == o)) {
            if (u <= o && u < c.min) {
              if (o < c.min)
                continue;
              p = (c.min - u) / (o - u) * (n - p) + p;
              u = c.min
            } else if (o <= u && o < c.min) {
              if (u < c.min)
                continue;
              n = (c.min - u) / (o - u) * (n - p) + p;
              o = c.min
            }
            if (u >= o && u > c.max) {
              if (o > c.max)
                continue;
              p = (c.max - u) / (o - u) * (n - p) + p;
              u = c.max
            } else if (o >= u && o > c.max) {
              if (u > c.max)
                continue;
              n = (c.max - u) / (o - u) * (n - p) + p;
              o = c.max
            }
            C || (m.beginPath(), m.moveTo(c.p2c(u), b.p2c(g)), C = !0);
            if (p >= b.max && n >= b.max)
              m.lineTo(c.p2c(u), b.p2c(b.max)), m.lineTo(c.p2c(o), b.p2c(b.max));
            else if (p <= b.min && n <= b.min)
              m.lineTo(c.p2c(u), b.p2c(b.min)), m.lineTo(c.p2c(o), b.p2c(b.min));
            else {
              var s = u, ta = o;
              if (p <= n && p < b.min && n >= b.min)
                u = (b.min - p) / (n - p) * (o - u) + u, p = b.min;
              else if (n <= p && n < b.min && p >= b.min)
                o = (b.min - p) / (n - p) * (o - u) + u, n = b.min;
              if (p >= n && p > b.max && n <= b.max)
                u = (b.max - p) / (n - p) * (o - u) + u, p = b.max;
              else if (n >= p && n > b.max && p <= b.max)
                o = (b.max - p) / (n - p) * (o - u) + u, n = b.max;
              u != s && m.lineTo(c.p2c(s), b.p2c(p));
              m.lineTo(c.p2c(u), b.p2c(p));
              m.lineTo(c.p2c(o), b.p2c(n));
              o != ta && (m.lineTo(c.p2c(o), b.p2c(n)), m.lineTo(c.p2c(ta), b.p2c(n)))
            }
          }
        }
      }
      m.save();
      m.translate(v.left, v.top);
      m.lineJoin = "round";
      var b = a.lines.lineWidth, h = a.shadowSize;
      if (0 < b && 0 < h) {
        m.lineWidth = h;
        m.strokeStyle = "rgba(0,0,0,0.1)";
        var g = Math.PI / 18;
        c(a.datapoints, Math.sin(g) * (b / 2 + h / 2), Math.cos(g) * (b / 2 + h / 2), a.xaxis, a.yaxis);
        m.lineWidth = h / 2;
        c(a.datapoints, Math.sin(g) * (b / 2 + h / 4), Math.cos(g) * (b / 2 + h / 4), a.xaxis, a.yaxis)
      }
      m.lineWidth = b;
      m.strokeStyle = a.color;
      if ( h = Q(a.lines, a.color, 0, ea))
        m.fillStyle = h, d(a.datapoints, a.xaxis, a.yaxis);
      0 < b && c(a.datapoints, 0, 0, a.xaxis, a.yaxis);
      m.restore()
    }

    function pa(a) {
      function c(a, b, d, h, g, l, u, C) {
        for (var p = a.points, a = a.pointsize, f = 0; f < p.length; f += a) {
          var e = p[f], k = p[f + 1];
          if (!(null == e || e < l.min || e > l.max || k < u.min || k > u.max)) {
            m.beginPath();
            e = l.p2c(e);
            k = u.p2c(k) + h;
            "circle" == C ? m.arc(e, k, b, 0, g ? Math.PI : 2 * Math.PI, !1) : C(m, e, k, b, g);
            m.closePath();
            if (d)
              m.fillStyle = d, m.fill();
            m.stroke()
          }
        }
      }
      m.save();
      m.translate(v.left, v.top);
      var b = a.points.lineWidth, d = a.shadowSize, h = a.points.radius, g = a.points.symbol;
      if (0 < b && 0 < d)
        d /= 2, m.lineWidth = d, m.strokeStyle = "rgba(0,0,0,0.1)", c(a.datapoints, h, null, d + d / 2, !0, a.xaxis, a.yaxis, g), m.strokeStyle = "rgba(0,0,0,0.2)", c(a.datapoints, h, null, d / 2, !0, a.xaxis, a.yaxis, g);
      m.lineWidth = b;
      m.strokeStyle = a.color;
      c(a.datapoints, h, Q(a.points, a.color), 0, !1, a.xaxis, a.yaxis, g);
      m.restore()
    }

    function ca(a, c, b, d, h, g, l, f, e, k, m, n) {
      var s, y, v, r;
      m ? ( r = y = v = !0, s = !1, m = b, b = c + d, h = c + h, a < m && ( c = a, a = m, m = c, s = !0, y = !1)) : ( s = y = v = !0, r = !1, m = a + d, a += h, h = b, b = c, b < h && ( c = b, b = h, h = c, r = !0, v = !1));
      if (!(a < f.min || m > f.max || b < e.min || h > e.max)) {
        if (m < f.min)
          m = f.min, s = !1;
        if (a > f.max)
          a = f.max, y = !1;
        if (h < e.min)
          h = e.min, r = !1;
        if (b > e.max)
          b = e.max, v = !1;
        m = f.p2c(m);
        h = e.p2c(h);
        a = f.p2c(a);
        b = e.p2c(b);
        if (l)
          k.beginPath(), k.moveTo(m, h), k.lineTo(m, b), k.lineTo(a, b), k.lineTo(a, h), k.fillStyle = l(h, b), k.fill();
        if (0 < n && (s || y || v || r))
          k.beginPath(), k.moveTo(m, h + g), s ? k.lineTo(m, b + g) : k.moveTo(m, b + g), v ? k.lineTo(a, b + g) : k.moveTo(a, b + g), y ? k.lineTo(a, h + g) : k.moveTo(a, h + g), r ? k.lineTo(m, h + g) : k.moveTo(m, h + g), k.stroke()
      }
    }

    function ja(a) {
      m.save();
      m.translate(v.left, v.top);
      m.lineWidth = a.bars.lineWidth;
      m.strokeStyle = a.color;
      var c = "left" == a.bars.align ? 0 : -a.bars.barWidth / 2;
      (function(c, b, d, h, g, l, k) {
        for (var f = c.points, c = c.pointsize, e = 0; e < f.length; e += c)
          null != f[e] && ca(f[e], f[e + 1], f[e + 2], b, d, h, g, l, k, m, a.bars.horizontal, a.bars.lineWidth)
      })(a.datapoints, c, c + a.bars.barWidth, 0, a.bars.fill ? function(c, b) {
        return Q(a.bars, a.color, c, b)
      } : null, a.xaxis, a.yaxis);
      m.restore()
    }

    function Q(a, b, d, g) {
      var l = a.fill;
      if (!l)
        return null;
      if (a.fillColor)
        return h(a.fillColor, d, g, b);
      a = c.color.parse(b);
      a.a = "number" == typeof l ? l : 0.4;
      a.normalize();
      return a.toString()
    }

    function L() {
      e.find(".legend").remove();
      if (g.legend.show) {
        for (var a = [], b = !1, d = g.legend.labelFormatter, h, f, k = 0; k < l.length; ++k)
          if ( h = l[k], f = h.label)
            0 == k % g.legend.noColumns && (b && a.push("</tr>"), a.push("<tr>"), b = !0), d && ( f = d(f, h)), a.push('<td class="legendColorBox"><div style="border:1px solid ' + g.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + h.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + f + "</td>");
        b && a.push("</tr>");
        if (0 != a.length)
          if ( b = '<table style="font-size:smaller;color:' + g.grid.color + '">' + a.join("") + "</table>", null != g.legend.container)
            c(g.legend.container).html(b);
          else if ( a = "", d = g.legend.position, h = g.legend.margin, null == h[0] && ( h = [h, h]), "n" == d.charAt(0) ? a += "top:" + (h[1] + v.top) + "px;" : "s" == d.charAt(0) && (a += "bottom:" + (h[1] + v.bottom) + "px;"), "e" == d.charAt(1) ? a += "right:" + (h[0] + v.right) + "px;" : "w" == d.charAt(1) && (a += "left:" + (h[0] + v.left) + "px;"), b = c('<div class="legend">' + b.replace('style="', 'style="position:absolute;' + a + ";") + "</div>").appendTo(e), 0 != g.legend.backgroundOpacity) {
            d = g.legend.backgroundColor;
            if (null == d)
              d = ( d = g.grid.backgroundColor) && "string" == typeof d ? c.color.parse(d) : c.color.extract(b, "background-color"), d.a = 1, d = d.toString();
            h = b.children();
            c('<div style="position:absolute;width:' + h.width() + "px;height:" + h.height() + "px;" + a + "background-color:" + d + ';"> </div>').prependTo(b).css("opacity", g.legend.backgroundOpacity)
          }
      }
    }

    function N(a) {
      g.grid.hoverable && O("plothover", a, function(a) {
        return !1 != a.hoverable
      })
    }

    function P(a) {
      g.grid.hoverable && O("plothover", a, function() {
        return !1
      })
    }

    function S(a) {
      O("plotclick", a, function(a) {
        return !1 != a.clickable
      })
    }

    function O(a, c, b) {
      var d = da.offset(), h = c.pageX - d.left - v.left, f = c.pageY - d.top - v.top, k = fa({
        left : h,
        top : f
      });
      k.pageX = c.pageX;
      k.pageY = c.pageY;
      var c = g.grid.mouseActiveRadius, m = c * c + 1, n = null, s, y;
      for ( s = l.length - 1; 0 <= s; --s)
        if (b(l[s])) {
          var r = l[s], t = r.xaxis, R = r.yaxis, T = r.datapoints.points, B = r.datapoints.pointsize, E = t.c2p(h), I = R.c2p(f), na = c / t.scale, M = c / R.scale;
          if (t.options.inverseTransform)
            na = Number.MAX_VALUE;
          if (R.options.inverseTransform)
            M = Number.MAX_VALUE;
          if (r.lines.show || r.points.show)
            for ( y = 0; y < T.length; y += B) {
              var x = T[y], G = T[y + 1];
              if (null != x && !(x - E > na || x - E < -na || G - I > M || G - I < -M))
                x = Math.abs(t.p2c(x) - h), G = Math.abs(R.p2c(G) - f), G = x * x + G * G, G < m && ( m = G, n = [s, y / B])
            }
          if (r.bars.show && !n) {
            t = "left" == r.bars.align ? 0 : -r.bars.barWidth / 2;
            r = t + r.bars.barWidth;
            for ( y = 0; y < T.length; y += B)
              if ( x = T[y], G = T[y + 1], R = T[y + 2], null != x && (l[s].bars.horizontal ? E <= Math.max(R, x) && E >= Math.min(R, x) && I >= G + t && I <= G + r : E >= x + t && E <= x + r && I >= Math.min(R, G) && I <= Math.max(R, G)))
                n = [s, y / B]
          }
        }
      n ? ( s = n[0], y = n[1], B = l[s].datapoints.pointsize, b = {
        datapoint : l[s].datapoints.points.slice(y * B, (y + 1) * B),
        dataIndex : y,
        series : l[s],
        seriesIndex : s
      }) : b = null;
      if (b)
        b.pageX = parseInt(b.series.xaxis.p2c(b.datapoint[0]) + d.left + v.left), b.pageY = parseInt(b.series.yaxis.p2c(b.datapoint[1]) + d.top + v.top);
      if (g.grid.autoHighlight) {
        for ( d = 0; d < ka.length; ++d)
          h = ka[d], h.auto == a && (!b || !(h.series == b.series && h.point[0] == b.datapoint[0] && h.point[1] == b.datapoint[1])) && W(h.series, h.point);
        b && X(b.series, b.datapoint, a)
      }
      e.trigger(a, [k, b])
    }

    function H() {
      ra || ( ra = setTimeout(Y, 30))
    }

    function Y() {
      ra = null;
      M.save();
      M.clearRect(0, 0, G, aa);
      M.translate(v.left, v.top);
      var a, b;
      for ( a = 0; a < ka.length; ++a)
        if ( b = ka[a], b.series.bars.show)
          y(b.series, b.point);
        else {
          var d = b.series, h = b.point;
          b = h[0];
          var h = h[1], g = d.xaxis, l = d.yaxis;
          if (!(b < g.min || b > g.max || h < l.min || h > l.max)) {
            var f = d.points.radius + d.points.lineWidth / 2;
            M.lineWidth = f;
            M.strokeStyle = c.color.parse(d.color).scale("a", 0.5).toString();
            f *= 1.5;
            b = g.p2c(b);
            h = l.p2c(h);
            M.beginPath();
            "circle" == d.points.symbol ? M.arc(b, h, f, 0, 2 * Math.PI, !1) : d.points.symbol(M, b, h, f, !1);
            M.closePath();
            M.stroke()
          }
        }
      M.restore();
      k(ba.drawOverlay, [M])
    }

    function X(a, b, c) {
      "number" == typeof a && ( a = l[a]);
      if ("number" == typeof b)
        var d = a.datapoints.pointsize, b = a.datapoints.points.slice(d * b, d * (b + 1));
      d = Z(a, b);
      if (-1 == d)
        ka.push({
          series : a,
          point : b,
          auto : c
        }), H();
      else if (!c)
        ka[d].auto = !1
    }

    function W(a, b) {
      null == a && null == b && ( ka = [], H());
      "number" == typeof a && ( a = l[a]);
      "number" == typeof b && ( b = a.data[b]);
      var c = Z(a, b);
      -1 != c && (ka.splice(c, 1), H())
    }

    function Z(a, b) {
      for (var c = 0; c < ka.length; ++c) {
        var d = ka[c];
        if (d.series == a && d.point[0] == b[0] && d.point[1] == b[1])
          return c
      }
      return -1
    }

    function y(a, b) {
      M.lineWidth = a.bars.lineWidth;
      M.strokeStyle = c.color.parse(a.color).scale("a", 0.5).toString();
      var d = c.color.parse(a.color).scale("a", 0.5).toString(), h = "left" == a.bars.align ? 0 : -a.bars.barWidth / 2;
      ca(b[0], b[1], b[2] || 0, h, h + a.bars.barWidth, 0, function() {
        return d
      }, a.xaxis, a.yaxis, M, a.bars.horizontal, a.bars.lineWidth)
    }

    function h(a, b, d, h) {
      if ("string" == typeof a)
        return a;
      for (var b = m.createLinearGradient(0, d, 0, b), d = 0, g = a.colors.length; d < g; ++d) {
        var l = a.colors[d];
        if ("string" != typeof l) {
          var f = c.color.parse(h);
          null != l.brightness && ( f = f.scale("rgb", l.brightness));
          null != l.opacity && (f.a *= l.opacity);
          l = f.toString()
        }
        b.addColorStop(d / (g - 1), l)
      }
      return b
    }

    var l = [], g = {
      colors : ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
      legend : {
        show : !0,
        noColumns : 1,
        labelFormatter : null,
        labelBoxBorderColor : "#ccc",
        container : null,
        position : "ne",
        margin : 5,
        backgroundColor : null,
        backgroundOpacity : 0.85
      },
      xaxis : {
        show : null,
        position : "bottom",
        mode : null,
        color : null,
        tickColor : null,
        transform : null,
        inverseTransform : null,
        min : null,
        max : null,
        autoscaleMargin : null,
        ticks : null,
        tickFormatter : null,
        labelWidth : null,
        labelHeight : null,
        reserveSpace : null,
        tickLength : null,
        alignTicksWithAxis : null,
        tickDecimals : null,
        tickSize : null,
        minTickSize : null,
        monthNames : null,
        timeformat : null,
        twelveHourClock : !1
      },
      yaxis : {
        autoscaleMargin : 0.02,
        position : "left"
      },
      xaxes : [],
      yaxes : [],
      series : {
        points : {
          show : !1,
          radius : 3,
          lineWidth : 2,
          fill : !0,
          fillColor : "#ffffff",
          symbol : "circle"
        },
        lines : {
          lineWidth : 2,
          fill : !1,
          fillColor : null,
          steps : !1
        },
        bars : {
          show : !1,
          lineWidth : 2,
          barWidth : 1,
          fill : !0,
          fillColor : null,
          align : "left",
          horizontal : !1
        },
        shadowSize : 3
      },
      grid : {
        show : !0,
        aboveData : !1,
        color : "#545454",
        backgroundColor : null,
        borderColor : null,
        tickColor : null,
        labelMargin : 5,
        axisMargin : 8,
        borderWidth : 2,
        minBorderMargin : null,
        markings : null,
        markingsColor : "#f4f4f4",
        markingsLineWidth : 2,
        clickable : !1,
        hoverable : !1,
        autoHighlight : !0,
        mouseActiveRadius : 10
      },
      hooks : {}
    }, T = null, R = null, da = null, m = null, M = null, E = [], B = [], v = {
      left : 0,
      right : 0,
      top : 0,
      bottom : 0
    }, G = 0, aa = 0, ma = 0, ea = 0, ba = {
      processOptions : [],
      processRawData : [],
      processDatapoints : [],
      drawSeries : [],
      draw : [],
      bindEvents : [],
      drawOverlay : [],
      shutdown : []
    }, F = this;
    F.setData = f;
    F.setupGrid = na;
    F.draw = V;
    F.getPlaceholder = function() {
      return e
    };
    F.getCanvas = function() {
      return T
    };
    F.getPlotOffset = function() {
      return v
    };
    F.width = function() {
      return ma
    };
    F.height = function() {
      return ea
    };
    F.offset = function() {
      var a = da.offset();
      a.left += v.left;
      a.top += v.top;
      return a
    };
    F.getData = function() {
      return l
    };
    F.getAxes = function() {
      var a = {};
      c.each(E.concat(B), function(b, c) {
        c && (a[c.direction + (1 != c.n ? c.n : "") + "axis"] = c)
      });
      return a
    };
    F.getXAxes = function() {
      return E
    };
    F.getYAxes = function() {
      return B
    };
    F.c2p = fa;
    F.p2c = function(a) {
      var b = {}, c, d, h;
      for ( c = 0; c < E.length; ++c)
        if (( d = E[c]) && d.used)
          if ( h = "x" + d.n, null == a[h] && 1 == d.n && ( h = "x"), null != a[h]) {
            b.left = d.p2c(a[h]);
            break
          }
      for ( c = 0; c < B.length; ++c)
        if (( d = B[c]) && d.used)
          if ( h = "y" + d.n, null == a[h] && 1 == d.n && ( h = "y"), null != a[h]) {
            b.top = d.p2c(a[h]);
            break
          }
      return b
    };
    F.getOptions = function() {
      return g
    };
    F.highlight = X;
    F.unhighlight = W;
    F.triggerRedrawOverlay = H;
    F.pointOffset = function(a) {
      return {
        left : parseInt(E[I(a, "x") - 1].p2c(+a.x) + v.left),
        top : parseInt(B[I(a, "y") - 1].p2c(+a.y) + v.top)
      }
    };
    F.shutdown = function() {
      ra && clearTimeout(ra);
      da.unbind("mousemove", N);
      da.unbind("mouseleave", P);
      da.unbind("click", S);
      k(ba.shutdown, [da])
    };
    F.resize = function() {
      r();
      ga(T);
      ga(R)
    };
    F.hooks = ba;
    (function() {
      for (var a = 0; a < b.length; ++a) {
        var d = b[a];
        d.init(F);
        d.options && c.extend(!0, g, d.options)
      }
    })(F);
    (function(a) {
      c.extend(!0, g, a);
      if (null == g.xaxis.color)
        g.xaxis.color = g.grid.color;
      if (null == g.yaxis.color)
        g.yaxis.color = g.grid.color;
      if (null == g.xaxis.tickColor)
        g.xaxis.tickColor = g.grid.tickColor;
      if (null == g.yaxis.tickColor)
        g.yaxis.tickColor = g.grid.tickColor;
      if (null == g.grid.borderColor)
        g.grid.borderColor = g.grid.color;
      if (null == g.grid.tickColor)
        g.grid.tickColor = c.color.parse(g.grid.color).scale("a", 0.22).toString();
      for ( a = 0; a < Math.max(1, g.xaxes.length); ++a)
        g.xaxes[a] = c.extend(!0, {}, g.xaxis, g.xaxes[a]);
      for ( a = 0; a < Math.max(1, g.yaxes.length); ++a)
        g.yaxes[a] = c.extend(!0, {}, g.yaxis, g.yaxes[a]);
      if (g.xaxis.noTicks && null == g.xaxis.ticks)
        g.xaxis.ticks = g.xaxis.noTicks;
      if (g.yaxis.noTicks && null == g.yaxis.ticks)
        g.yaxis.ticks = g.yaxis.noTicks;
      if (g.x2axis)
        g.xaxes[1] = c.extend(!0, {}, g.xaxis, g.x2axis), g.xaxes[1].position = "top";
      if (g.y2axis)
        g.yaxes[1] = c.extend(!0, {}, g.yaxis, g.y2axis), g.yaxes[1].position = "right";
      if (g.grid.coloredAreas)
        g.grid.markings = g.grid.coloredAreas;
      if (g.grid.coloredAreasColor)
        g.grid.markingsColor = g.grid.coloredAreasColor;
      g.lines && c.extend(!0, g.series.lines, g.lines);
      g.points && c.extend(!0, g.series.points, g.points);
      g.bars && c.extend(!0, g.series.bars, g.bars);
      if (null != g.shadowSize)
        g.series.shadowSize = g.shadowSize;
      for ( a = 0; a < g.xaxes.length; ++a)
        D(E, a + 1).options = g.xaxes[a];
      for ( a = 0; a < g.yaxes.length; ++a)
        D(B, a + 1).options = g.yaxes[a];
      for (var b in ba)g.hooks[b] && g.hooks[b].length && (ba[b] = ba[b].concat(g.hooks[b]));
      k(ba.processOptions, [g])
    })(d);
    (function() {
      var a;
      a = e.children("canvas.base");
      var b = e.children("canvas.overlay");
      0 == a.length || 0 == b ? (e.html(""), e.css({
        padding : 0
      }), "static" == e.css("position") && e.css("position", "relative"), r(), T = s(!0, "base"), R = s(!1, "overlay"), a = !1) : ( T = a.get(0), R = b.get(0), a = !0);
      m = T.getContext("2d");
      M = R.getContext("2d");
      da = c([R, T]);
      a && (e.data("plot").shutdown(), F.resize(), M.clearRect(0, 0, G, aa), da.unbind(), e.children().not([T, R]).remove());
      e.data("plot", F)
    })();
    f(a);
    na();
    V();
    g.grid.hoverable && (da.mousemove(N), da.mouseleave(P));
    g.grid.clickable && da.click(S);
    k(ba.bindEvents, [da]);
    var ka = [], ra = null
  }

  function w(c, a) {
    return a * Math.floor(c / a)
  }
  c.plot = function(q, a, d) {
    return new e(c(q), a, d, c.plot.plugins)
  };
  c.plot.version = "0.7";
  c.plot.plugins = [];
  c.plot.formatDate = function(c, a, d) {
    var b = function(a) {
      a = "" + a;
      return 1 == a.length ? "0" + a : a
    }, k = [], f = !1, e = !1, x = c.getUTCHours(), w = 12 > x;
    null == d && ( d = "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","));
    -1 != a.search(/%p|%P/) && (12 < x ? x -= 12 : 0 == x && ( x = 12));
    for (var D = 0; D < a.length; ++D) {
      var z = a.charAt(D);
      if (f) {
        switch(z) {
          case "h":
            z = "" + x;
            break;
          case "H":
            z = b(x);
            break;
          case "M":
            z = b(c.getUTCMinutes());
            break;
          case "S":
            z = b(c.getUTCSeconds());
            break;
          case "d":
            z = "" + c.getUTCDate();
            break;
          case "m":
            z = "" + (c.getUTCMonth() + 1);
            break;
          case "y":
            z = "" + c.getUTCFullYear();
            break;
          case "b":
            z = "" + d[c.getUTCMonth()];
            break;
          case "p":
            z = w ? "am" : "pm";
            break;
          case "P":
            z = w ? "AM" : "PM";
            break;
          case "0":
            z = "", e = !0
        }
        z && e && ( z = b(z), e = !1);
        k.push(z);
        e || ( f = !1)
      } else
        "%" == z ? f = !0 : k.push(z)
    }
    return k.join("")
  }
})(jQuery);
(function(c) {
  c.plot.plugins.push({
    init : function(e) {
      var w, q, a, d, b, k;
      function f(b) {
        a && (z(b), e.getPlaceholder().trigger("plotselecting", [x()]))
      }

      function I(b) {
        if (1 == b.which) {
          document.body.focus();
          if (
            void 0 !== document.onselectstart && null == w)
            w = document.onselectstart, document.onselectstart = function() {
              return !1
            };
          if (
            void 0 !== document.ondrag && null == q)
            q = document.ondrag, document.ondrag = function() {
              return !1
            };
          D(d, b);
          a = !0;
          ha = function(b) {
            ha = null;
            if (
              void 0 !== document.onselectstart)
              document.onselectstart = w;
            if (
              void 0 !== document.ondrag)
              document.ondrag = q;
            a = !1;
            z(b);
            ga() ? fa() : (e.getPlaceholder().trigger("plotunselected", []), e.getPlaceholder().trigger("plotselecting", [null]))
          };
          c(document).one("mouseup", ha)
        }
      }

      function x() {
        if (!ga())
          return null;
        var a = {}, f = d, k = b;
        c.each(e.getAxes(), function(b, c) {
          if (c.used) {
            var d = c.c2p(f[c.direction]), e = c.c2p(k[c.direction]);
            a[b] = {
              from : Math.min(d, e),
              to : Math.max(d, e)
            }
          }
        });
        return a
      }

      function fa() {
        var a = x();
        e.getPlaceholder().trigger("plotselected", [a]);
        a.xaxis && a.yaxis && e.getPlaceholder().trigger("selected", [{
          x1 : a.xaxis.from,
          y1 : a.yaxis.from,
          x2 : a.xaxis.to,
          y2 : a.yaxis.to
        }])
      }

      function D(a, b) {
        var c = e.getOptions(), f = e.getPlaceholder().offset(), k = e.getPlotOffset(), s = b.pageX - f.left - k.left, r = e.width();
        a.x = 0 > s ? 0 : s > r ? r : s;
        f = b.pageY - f.top - k.top;
        k = e.height();
        a.y = 0 > f ? 0 : f > k ? k : f;
        if ("y" == c.selection.mode)
          a.x = a == d ? 0 : e.width();
        if ("x" == c.selection.mode)
          a.y = a == d ? 0 : e.height()
      }

      function z(a) {
        null != a.pageX && (D(b, a), ga() ? ( k = !0, e.triggerRedrawOverlay()) : s(!0))
      }

      function s(a) {
        k && ( k = !1, e.triggerRedrawOverlay(), a || e.getPlaceholder().trigger("plotunselected", []))
      }

      function r(a, b) {
        var c, d, f, k, s = e.getAxes(), r;
        for (r in s)
        if ( c = s[r], c.direction == b && ( k = b + c.n + "axis", !a[k] && 1 == c.n && ( k = b + "axis"), a[k])) {
          d = a[k].from;
          f = a[k].to;
          break
        }
        a[k] || ( c = "x" == b ? e.getXAxes()[0] : e.getYAxes()[0], d = a[b + "1"], f = a[b + "2"]);
        null != d && null != f && d > f && ( k = d, d = f, f = k);
        return {
          from : d,
          to : f,
          axis : c
        }
      }

      function ga() {
        return 5 <= Math.abs(b.x - d.x) && 5 <= Math.abs(b.y - d.y)
      }

      d = {
        x : -1,
        y : -1
      };
      b = {
        x : -1,
        y : -1
      };
      k = !1;
      a = !1;
      w =
      void 0;
      q =
      void 0;
      var ha = null;
      e.clearSelection = s;
      e.setSelection = function(a, c) {
        var f, s = e.getOptions();
        "y" == s.selection.mode ? (d.x = 0, b.x = e.width()) : ( f = r(a, "x"), d.x = f.axis.p2c(f.from), b.x = f.axis.p2c(f.to));
        "x" == s.selection.mode ? (d.y = 0, b.y = e.height()) : ( f = r(a, "y"), d.y = f.axis.p2c(f.from), b.y = f.axis.p2c(f.to));
        k = !0;
        e.triggerRedrawOverlay();
        !c && ga() && fa()
      };
      e.getSelection = x;
      e.hooks.bindEvents.push(function(a, b) {
        null != a.getOptions().selection.mode && (b.mousemove(f), b.mousedown(I))
      });
      e.hooks.drawOverlay.push(function(a, f) {
        if (k && ga()) {
          var e = a.getPlotOffset(), s = a.getOptions();
          f.save();
          f.translate(e.left, e.top);
          e = c.color.parse(s.selection.color);
          f.strokeStyle = e.scale("a", 0.8).toString();
          f.lineWidth = 1;
          f.lineJoin = "round";
          f.fillStyle = e.scale("a", 0.4).toString();
          var e = Math.min(d.x, b.x), s = Math.min(d.y, b.y), r = Math.abs(b.x - d.x), I = Math.abs(b.y - d.y);
          f.fillRect(e, s, r, I);
          f.strokeRect(e, s, r, I);
          f.restore()
        }
      });
      e.hooks.shutdown.push(function(a, b) {
        b.unbind("mousemove", f);
        b.unbind("mousedown", I);
        ha && c(document).unbind("mouseup", ha)
      })
    },
    options : {
      selection : {
        mode : null,
        color : "#e8cfac"
      }
    },
    name : "selection",
    version : "1.1"
  })
})(jQuery);
(function(c, e) {
  function w(a, b) {
    for ( a = "" + a, b = b || 2; a.length < b; )
      a = "0" + a;
    return a
  }

  function q(a, b, c, d) {
    var f = b.getDate(), k = b.getDay(), e = b.getMonth(), t = b.getFullYear(), f = {
      d : f,
      dd : w(f),
      ddd : D[d].shortDays[k],
      dddd : D[d].days[k],
      m : e + 1,
      mm : w(e + 1),
      mmm : D[d].shortMonths[e],
      mmmm : D[d].months[e],
      yy : ("" + t).slice(2),
      yyyy : t
    }, a = I[a](c, b, f, d);
    return z.html(a).html()
  }

  function a(a) {
    return parseInt(a, 10)
  }

  function d(a, b) {
    return a.getFullYear() === b.getFullYear() && a.getMonth() == b.getMonth() && a.getDate() == b.getDate()
  }

  function b(b) {
    if (b !== e) {
      if (b.constructor == Date)
        return b;
      if ("string" == typeof b) {
        var c = b.split("-");
        if (3 == c.length)
          return new Date(a(c[0]), a(c[1]) - 1, a(c[2]));
        if (!/^-?\d+$/.test(b))
          return;
        b = a(b)
      }
      c = new Date;
      c.setDate(c.getDate() + b);
      return c
    }
  }

  function k(k, r) {
    function I(a, b, d) {
      L = a;
      ca = a.getFullYear();
      ja = a.getMonth();
      Q = a.getDate();
      d || ( d = c.Event("api"));
      "click" == d.type && !c.browser.msie && k.focus();
      d.type = "beforeChange";
      H.trigger(d, [a]);
      d.isDefaultPrevented() || (k.val(q(b.formatter, a, b.format, b.lang)), d.type = "change", H.trigger(d), k.data("date", a), n.hide(d))
    }

    function x(a) {
      a.type = "onShow";
      H.trigger(a);
      c(document).on("keydown.d", function(a) {
        if (a.ctrlKey)
          return !0;
        var b = a.keyCode;
        if (8 == b || 46 == b)
          return k.val(""), n.hide(a);
        if (27 == b || 9 == b)
          return n.hide(a);
        if (0 <= c(fa).index(b)) {
          if (!S)
            return n.show(a), a.preventDefault();
          var d = c("#" + t.weeks + " a"), f = c("." + t.focus), e = d.index(f);
          f.removeClass(t.focus);
          if (74 == b || 40 == b)
            e += 7;
          else if (75 == b || 38 == b)
            e -= 7;
          else if (76 == b || 39 == b)
            e += 1;
          else if (72 == b || 37 == b)
            e -= 1;
          41 < e ? (n.addMonth(), f = c("#" + t.weeks + " a:eq(" + (e - 42) + ")")) : 0 > e ? (n.addMonth(-1), f = c("#" + t.weeks + " a:eq(" + (e + 42) + ")")) : f = d.eq(e);
          f.addClass(t.focus);
          return a.preventDefault()
        }
        if (34 == b)
          return n.addMonth();
        if (33 == b)
          return n.addMonth(-1);
        if (36 == b)
          return n.today();
        13 == b && (c(a.target).is("select") || c("." + t.focus).click());
        return 0 <= c([16, 17, 18, 9]).index(b)
      });
      c(document).on("click.d", function(a) {
        var b = a.target;
        !c(b).parents("#" + t.root).length && b != k[0] && (!qa || b != qa[0]) && n.hide(a)
      })
    }

    var n = this, w = new Date, z = w.getFullYear(), t = r.css, V = D[r.lang], J = c("#" + t.root), oa = J.find("#" + t.title), qa, ia, pa, ca, ja, Q, L = k.attr("data-value") || r.value || k.val(), N = k.attr("min") || r.min, P = k.attr("max") || r.max, S, O;
    0 === N && ( N = "0");
    L = b(L) || w;
    N = b(N || new Date(z + r.yearRange[0], 1, 1));
    P = b(P || new Date(z + r.yearRange[1] + 1, 1, -1));
    if (!V)
      throw "Dateinput: invalid language: " + r.lang;
    "date" == k.attr("type") && ( O = k.clone(), z = O.wrap("<div/>").parent().html(), z = c(z.replace(/type/i, "type=text data-orig-type")), r.value && z.val(r.value), k.replaceWith(z), k = z);
    k.addClass(t.input);
    var H = k.add(n);
    if (!J.length) {
      J = c("<div><div><a/><div/><a/></div><div><div/><div/></div></div>").hide().css({
        position : "absolute"
      }).attr("id", t.root);
      J.children().eq(0).attr("id", t.head).end().eq(1).attr("id", t.body).children().eq(0).attr("id", t.days).end().eq(1).attr("id", t.weeks).end().end().end().find("a").eq(0).attr("id", t.prev).end().eq(1).attr("id", t.next);
      oa = J.find("#" + t.head).find("div").attr("id", t.title);
      if (r.selectors) {
        var Y = c("<select/>").attr("id", t.month), X = c("<select/>").attr("id", t.year);
        oa.html(Y.add(X))
      }
      for (var z = J.find("#" + t.days), W = 0; 7 > W; W++)
        z.append(c("<span/>").text(V.shortDays[(W + r.firstDay) % 7]));
      c("body").append(J)
    }
    r.trigger && ( qa = c("<a/>").attr("href", "#").addClass(t.trigger).click(function(a) {
      r.toggle ? n.toggle() : n.show();
      return a.preventDefault()
    }).insertAfter(k));
    var Z = J.find("#" + t.weeks);
    X = J.find("#" + t.year);
    Y = J.find("#" + t.month);
    c.extend(n, {
      show : function(b) {
        if (!k.attr("readonly") && !k.attr("disabled") && !S && ( b = b || c.Event(), b.type = "onBeforeShow", H.trigger(b), !b.isDefaultPrevented())) {
          c.each(f, function() {
            this.hide()
          });
          S = !0;
          Y.off("change").change(function() {
            n.setValue(a(X.val()), a(c(this).val()))
          });
          X.off("change").change(function() {
            n.setValue(a(c(this).val()), a(Y.val()))
          });
          ia = J.find("#" + t.prev).off("click").click(function() {
            ia.hasClass(t.disabled) || n.addMonth(-1);
            return !1
          });
          pa = J.find("#" + t.next).off("click").click(function() {
            pa.hasClass(t.disabled) || n.addMonth();
            return !1
          });
          n.setValue(L);
          var d = k.offset();
          /iPad/i.test(navigator.userAgent) && (d.top -= c(window).scrollTop());
          J.css({
            top : d.top + k.outerHeight({
              margins : !0
            }) + r.offset[0],
            left : d.left + r.offset[1]
          });
          r.speed ? J.show(r.speed, function() {
            x(b)
          }) : (J.show(), x(b));
          return n
        }
      },
      setValue : function(f, h, l) {
        var g = -1 <= a(h) ? new Date(a(f), a(h), a(l == e || isNaN(l) ? 1 : l)) : f || L;
        g < N ? g = N : g > P && ( g = P);
        "string" == typeof f && ( g = b(f));
        f = g.getFullYear();
        h = g.getMonth();
        l = g.getDate();
        -1 == h ? ( h = 11, f--) : 12 == h && ( h = 0, f++);
        if (!S)
          return I(g, r), n;
        ja = h;
        ca = f;
        Q = l;
        var l = (new Date(f, h, 1 - r.firstDay)).getDay(), k = (new Date(f, h + 1, 0)).getDate(), s = (new Date(f, h - 1 + 1, 0)).getDate(), x;
        if (r.selectors) {
          Y.empty();
          c.each(V.months, function(a, b) {
            N < new Date(f, a + 1, 1) && P > new Date(f, a, 0) && Y.append(c("<option/>").html(b).attr("value", a))
          });
          X.empty();
          for (var m = w.getFullYear(), q = m + r.yearRange[0]; q < m + r.yearRange[1]; q++)
            N < new Date(q + 1, 0, 1) && P > new Date(q, 0, 0) && X.append(c("<option/>").text(q));
          Y.val(h);
          X.val(f)
        } else
          oa.html(V.months[h] + " " + f);
        Z.empty();
        ia.add(pa).removeClass(t.disabled);
        for (var m = l ? 0 : -7, E, B; m < ( l ? 42 : 35); m++)
          E = c("<a/>"), 0 === m % 7 && ( x = c("<div/>").addClass(t.week), Z.append(x)), m < l ? (E.addClass(t.off), B = s - l + m + 1, g = new Date(f, h - 1, B)) : m < l + k ? ( B = m - l + 1, g = new Date(f, h, B), d(L, g) ? E.attr("id", t.current).addClass(t.focus) : d(w, g) && E.attr("id", t.today)) : (E.addClass(t.off), B = m - k - l + 1, g = new Date(f, h + 1, B)), N && g < N && E.add(ia).addClass(t.disabled), P && g > P && E.add(pa).addClass(t.disabled), E.attr("href", "#" + B).text(B).data("date", g), x.append(E);
        Z.find("a").click(function(a) {
          var b = c(this);
          b.hasClass(t.disabled) || (c("#" + t.current).removeAttr("id"), b.attr("id", t.current), I(b.data("date"), r, a));
          return !1
        });
        t.sunday && Z.find("." + t.week).each(function() {
          var a = r.firstDay ? 7 - r.firstDay : 0;
          c(this).children().slice(a, a + 1).addClass(t.sunday)
        });
        return n
      },
      setMin : function(a, c) {
        N = b(a);
        c && L < N && n.setValue(N);
        return n
      },
      setMax : function(a, c) {
        P = b(a);
        c && L > P && n.setValue(P);
        return n
      },
      today : function() {
        return n.setValue(w)
      },
      addDay : function(a) {
        return this.setValue(ca, ja, Q + (a || 1))
      },
      addMonth : function(a) {
        var a = ja + (a || 1), b = (new Date(ca, a + 1, 0)).getDate();
        return this.setValue(ca, a, Q <= b ? Q : b)
      },
      addYear : function(a) {
        return this.setValue(ca + (a || 1), ja, Q)
      },
      destroy : function() {
        k.add(document).off("click.d keydown.d");
        J.add(qa).remove();
        k.removeData("dateinput").removeClass(t.input);
        O && k.replaceWith(O)
      },
      hide : function(a) {
        if (S) {
          a = c.Event();
          a.type = "onHide";
          H.trigger(a);
          if (a.isDefaultPrevented())
            return;
          c(document).off("click.d keydown.d");
          J.hide();
          S = !1
        }
        return n
      },
      toggle : function() {
        return n.isOpen() ? n.hide() : n.show()
      },
      getConf : function() {
        return r
      },
      getInput : function() {
        return k
      },
      getCalendar : function() {
        return J
      },
      getValue : function(a) {
        return a ? q(r.formatter, L, a, r.lang) : L
      },
      isOpen : function() {
        return S
      }
    });
    c.each(["onBeforeShow", "onShow", "change", "onHide"], function(a, b) {
      c.isFunction(r[b]) && c(n).on(b, r[b]);
      n[b] = function(a) {
        a && c(n).on(b, a);
        return n
      }
    });
    r.editable || k.on("focus.d click.d", n.show).keydown(function(a) {
      var b = a.keyCode;
      if (S || 0 > c(fa).index(b))
        (8 == b || 46 == b) && k.val("");
      else
        return n.show(a), a.preventDefault();
      return a.shiftKey || a.ctrlKey || a.altKey || 9 == b ? !0 : a.preventDefault()
    });
    b(k.val()) && I(L, r)
  }
  c.tools = c.tools || {
    version : "v1.2.7"
  };
  var f = [], I = {}, x, fa = [75, 76, 38, 39, 74, 72, 40, 37], D = {};
  x = c.tools.dateinput = {
    conf : {
      format : "mm/dd/yy",
      formatter : "default",
      selectors : !1,
      yearRange : [-5, 5],
      lang : "en",
      offset : [0, 0],
      speed : 0,
      firstDay : 0,
      min : e,
      max : e,
      trigger : 0,
      toggle : 0,
      editable : 0,
      css : {
        prefix : "cal",
        input : "date",
        root : 0,
        head : 0,
        title : 0,
        prev : 0,
        next : 0,
        month : 0,
        year : 0,
        days : 0,
        body : 0,
        weeks : 0,
        today : 0,
        current : 0,
        week : 0,
        off : 0,
        sunday : 0,
        focus : 0,
        disabled : 0,
        trigger : 0
      }
    },
    addFormatter : function(a, b) {
      I[a] = b
    },
    localize : function(a, b) {
      c.each(b, function(a, c) {
        b[a] = c.split(",")
      });
      D[a] = b
    }
  };
  x.localize("en", {
    months : "January,February,March,April,May,June,July,August,September,October,November,December",
    shortMonths : "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",
    days : "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday",
    shortDays : "Sun,Mon,Tue,Wed,Thu,Fri,Sat"
  });
  var z = c("<a/>");
  x.addFormatter("default", function(a, b, c) {
    return a.replace(/d{1,4}|m{1,4}|yy(?:yy)?|"[^"]*"|'[^']*'/g, function(a) {
      return a in c ? c[a] : a
    })
  });
  x.addFormatter("prefixed", function(a, b, c) {
    return a.replace(/%(d{1,4}|m{1,4}|yy(?:yy)?|"[^"]*"|'[^']*')/g, function(a, b) {
      return b in c ? c[b] : a
    })
  });
  c.expr[":"].date = function(a) {
    var b = a.getAttribute("type");
    return b && "date" == b || c(a).data("dateinput")
  };
  c.fn.dateinput = function(a) {
    if (this.data("dateinput"))
      return this;
    a = c.extend(!0, {}, x.conf, a);
    c.each(a.css, function(b, c) {
      !c && "prefix" != b && (a.css[b] = (a.css.prefix || "") + (c || b))
    });
    var b;
    this.each(function() {
      var d = new k(c(this), a);
      f.push(d);
      d = d.getInput().data("dateinput", d);
      b = b ? b.add(d) : d
    });
    return b ? b : this
  }
})(jQuery);
(function(c) {
  function e() {
    this._disabledInputs = [];
    this.regional = [];
    this.regional[""] = {
      show24Hours : !1,
      separator : ":",
      ampmPrefix : "",
      ampmNames : ["AM", "PM"],
      spinnerTexts : ["Now", "Previous field", "Next field", "Increment", "Decrement"]
    };
    this._defaults = {
      appendText : "",
      showSeconds : !1,
      timeSteps : [1, 1, 1],
      initialField : 0,
      useMouseWheel : !0,
      defaultTime : null,
      minTime : null,
      maxTime : null,
      spinnerImage : "spinnerDefault.png",
      spinnerSize : [20, 20, 8],
      spinnerBigImage : "",
      spinnerBigSize : [40, 40, 16],
      spinnerIncDecOnly : !1,
      spinnerRepeat : [500, 250],
      beforeShow : null,
      beforeSetTime : null
    };
    c.extend(this._defaults, this.regional[""])
  }

  function w(a, d) {
    c.extend(a, d);
    for (var b in d)null == d[b] && (a[b] = null);
    return a
  }
  c.extend(e.prototype, {
    markerClassName : "hasTimeEntry",
    setDefaults : function(a) {
      w(this._defaults, a || {});
      return this
    },
    _connectTimeEntry : function(a, d) {
      var b = c(a);
      if (!b.hasClass(this.markerClassName)) {
        var k = {};
        k.options = c.extend({}, d);
        k._selectedHour = 0;
        k._selectedMinute = 0;
        k._selectedSecond = 0;
        k._field = 0;
        k.input = c(a);
        c.data(a, "timeEntry", k);
        var f = this._get(k, "spinnerImage");
        this._get(k, "spinnerText");
        var e = this._get(k, "spinnerSize"), x = this._get(k, "appendText"), f = !f ? null : c('<span class="timeEntry_control" style="display: inline-block; background: url(\'' + f + "') 0 0 no-repeat; width: " + e[0] + "px; height: " + e[1] + "px;" + (c.browser.mozilla && "1.9" > c.browser.version ? " padding-left: " + e[0] + "px; padding-bottom: " + (e[1] - 18) + "px;" : "") + '"></span>');
        b.wrap('<span class="timeEntry_wrap"></span>').after( x ? '<span class="timeEntry_append">' + x + "</span>" : "").after(f || "");
        b.addClass(this.markerClassName).bind("focus.timeEntry", this._doFocus).bind("blur.timeEntry", this._doBlur).bind("click.timeEntry", this._doClick).bind("keydown.timeEntry", this._doKeyDown).bind("keypress.timeEntry", this._doKeyPress);
        c.browser.mozilla && b.bind("input.timeEntry", function() {
          c.timeEntry._parseTime(k)
        });
        c.browser.msie && b.bind("paste.timeEntry", function() {
          setTimeout(function() {
            c.timeEntry._parseTime(k)
          }, 1)
        });
        this._get(k, "useMouseWheel") && c.fn.mousewheel && b.mousewheel(this._doMouseWheel);
        f && f.mousedown(this._handleSpinner).mouseup(this._endSpinner).mouseover(this._expandSpinner).mouseout(this._endSpinner).mousemove(this._describeSpinner)
      }
    },
    _enableTimeEntry : function(a) {
      this._enableDisable(a, !1)
    },
    _disableTimeEntry : function(a) {
      this._enableDisable(a, !0)
    },
    _enableDisable : function(a, d) {
      var b = c.data(a, "timeEntry");
      if (b)
        a.disabled = d, a.nextSibling && "span" == a.nextSibling.nodeName.toLowerCase() && c.timeEntry._changeSpinner(b, a.nextSibling, d ? 5 : -1), c.timeEntry._disabledInputs = c.map(c.timeEntry._disabledInputs, function(b) {
          return b == a ? null : b
        }), d && c.timeEntry._disabledInputs.push(a)
    },
    _isDisabledTimeEntry : function(a) {
      return -1 < c.inArray(a, this._disabledInputs)
    },
    _changeTimeEntry : function(a, d, b) {
      var k = c.data(a, "timeEntry");
      if (k) {
        if ("string" == typeof d) {
          var f = d, d = {};
          d[f] = b
        }
        b = this._extractTime(k);
        w(k.options, d || {});
        b && this._setTime(k, new Date(0, 0, 0, b[0], b[1], b[2]))
      }
      c.data(a, "timeEntry", k)
    },
    _destroyTimeEntry : function(a) {
      $input = c(a);
      if ($input.hasClass(this.markerClassName))
        $input.removeClass(this.markerClassName).unbind(".timeEntry"), c.fn.mousewheel && $input.unmousewheel(), this._disabledInputs = c.map(this._disabledInputs, function(c) {
          return c == a ? null : c
        }), $input.parent().replaceWith($input), c.removeData(a, "timeEntry")
    },
    _setTimeTimeEntry : function(a, d) {
      var b = c.data(a, "timeEntry");
      b && (null === d || "" === d ? b.input.val("") : this._setTime(b, d ? "object" == typeof d ? new Date(d.getTime()) : d : null))
    },
    _getTimeTimeEntry : function(a) {
      a = ( a = c.data(a, "timeEntry")) ? this._extractTime(a) : null;
      return !a ? null : new Date(0, 0, 0, a[0], a[1], a[2])
    },
    _getOffsetTimeEntry : function(a) {
      a = ( a = c.data(a, "timeEntry")) ? this._extractTime(a) : null;
      return !a ? 0 : 1E3 * (3600 * a[0] + 60 * a[1] + a[2])
    },
    _doFocus : function(a) {
      a = a.nodeName && "input" == a.nodeName.toLowerCase() ? a : this;
      if (c.timeEntry._lastInput == a || c.timeEntry._isDisabledTimeEntry(a))
        c.timeEntry._focussed = !1;
      else {
        var d = c.data(a, "timeEntry");
        c.timeEntry._focussed = !0;
        c.timeEntry._lastInput = a;
        c.timeEntry._blurredInput = null;
        var b = c.timeEntry._get(d, "beforeShow");
        w(d.options, b ? b.apply(a, [a]) : {});
        c.data(a, "timeEntry", d);
        c.timeEntry._parseTime(d);
        setTimeout(function() {
          c.timeEntry._showField(d)
        }, 10)
      }
    },
    _doBlur : function() {
      c.timeEntry._blurredInput = c.timeEntry._lastInput;
      c.timeEntry._lastInput = null
    },
    _doClick : function(a) {
      var d = a.target, b = c.data(d, "timeEntry");
      if (!c.timeEntry._focussed) {
        var k = c.timeEntry._get(b, "separator").length + 2;
        b._field = 0;
        if (null != d.selectionStart)
          for (var f = 0; f <= Math.max(1, b._secondField, b._ampmField) && !( a = f != b._ampmField ? f * k + 2 : b._ampmField * k + c.timeEntry._get(b, "ampmPrefix").length + c.timeEntry._get(b,"ampmNames")[0].length, b._field = f, d.selectionStart < a); f++);
        else if (d.createTextRange)
          for (var f = c(a.srcElement), e = d.createTextRange(), a = a.clientX + document.documentElement.scrollLeft, x = f.offset().left, q = parseInt, f = f.css("border-left-width"), x = a - (x + q({thin:2,medium:4,thick:6}[f] || f, 10)) - e.offsetLeft, f = 0; f <= Math.max(1, b._secondField, b._ampmField) && !( a = f != b._ampmField ? f * k + 2 : b._ampmField * k + c.timeEntry._get(b, "ampmPrefix").length + c.timeEntry._get(b,"ampmNames")[0].length, e.collapse(), e.moveEnd("character", a), b._field = f, x < e.boundingWidth); f++);
      }
      c.data(d, "timeEntry", b);
      c.timeEntry._showField(b);
      c.timeEntry._focussed = !1
    },
    _doKeyDown : function(a) {
      if (48 <= a.keyCode)
        return !0;
      var d = c.data(a.target, "timeEntry");
      switch(a.keyCode) {
        case 9:
          return a.shiftKey ? c.timeEntry._changeField(d, -1, !0) : c.timeEntry._changeField(d, 1, !0);
        case 35:
          a.ctrlKey ? c.timeEntry._setValue(d, "") : (d._field = Math.max(1, d._secondField, d._ampmField), c.timeEntry._adjustField(d, 0));
          break;
        case 36:
          a.ctrlKey ? c.timeEntry._setTime(d) : (d._field = 0, c.timeEntry._adjustField(d, 0));
          break;
        case 37:
          c.timeEntry._changeField(d, -1, !1);
          break;
        case 38:
          c.timeEntry._adjustField(d, 1);
          break;
        case 39:
          c.timeEntry._changeField(d, 1, !1);
          break;
        case 40:
          c.timeEntry._adjustField(d, -1);
          break;
        case 46:
          c.timeEntry._setValue(d, "")
      }
      return !1
    },
    _doKeyPress : function(a) {
      var d = String.fromCharCode(
      void 0 == a.charCode ? a.keyCode : a.charCode);
      if (" " > d)
        return !0;
      a = c.data(a.target, "timeEntry");
      c.timeEntry._handleKeyPress(a, d);
      return !1
    },
    _doMouseWheel : function(a, d) {
      if (!c.timeEntry._isDisabledTimeEntry(a.target)) {
        var d = c.browser.opera ? -d / Math.abs(d) : c.browser.safari ? d / Math.abs(d) : d, b = c.data(a.target, "timeEntry");
        b.input.focus();
        b.input.val() || c.timeEntry._parseTime(b);
        c.timeEntry._adjustField(b, d);
        a.preventDefault()
      }
    },
    _expandSpinner : function(a) {
      var a = c.timeEntry._getSpinnerTarget(a), d = c.data(c.timeEntry._getInput(a), "timeEntry");
      if (!c.timeEntry._isDisabledTimeEntry(d.input[0])) {
        var b = c.timeEntry._get(d, "spinnerBigImage");
        if (b) {
          d._expanded = !0;
          var k = c(a).offset(), f = null;
          c(a).parents().each(function() {
            var a = c(this);
            if ("relative" == a.css("position") || "absolute" == a.css("position"))
              f = a.offset();
            return !f
          });
          var e = c.timeEntry._get(d, "spinnerSize"), d = c.timeEntry._get(d, "spinnerBigSize");
          c('<div class="timeEntry_expand" style="position: absolute; left: ' + (k.left - (d[0] - e[0]) / 2 - ( f ? f.left : 0)) + "px; top: " + (k.top - (d[1] - e[1]) / 2 - ( f ? f.top : 0)) + "px; width: " + d[0] + "px; height: " + d[1] + "px; background: transparent url(" + b + ') no-repeat 0px 0px; z-index: 10;"></div>').mousedown(c.timeEntry._handleSpinner).mouseup(c.timeEntry._endSpinner).mouseout(c.timeEntry._endExpand).mousemove(c.timeEntry._describeSpinner).insertAfter(a)
        }
      }
    },
    _getInput : function(a) {
      return c(a).siblings("."+c.timeEntry.markerClassName)[0]
    },
    _describeSpinner : function(a) {
      var d = c.timeEntry._getSpinnerTarget(a), b = c.data(c.timeEntry._getInput(d), "timeEntry");
      d.title = c.timeEntry._get(b,"spinnerTexts")[c.timeEntry._getSpinnerRegion(b, a)]
    },
    _handleSpinner : function(a) {
      var d = c.timeEntry._getSpinnerTarget(a), b = c.timeEntry._getInput(d);
      if (!c.timeEntry._isDisabledTimeEntry(b)) {
        if (b == c.timeEntry._blurredInput)
          c.timeEntry._lastInput = b, c.timeEntry._blurredInput = null;
        var k = c.data(b, "timeEntry");
        c.timeEntry._doFocus(b);
        var f = c.timeEntry._getSpinnerRegion(k, a);
        c.timeEntry._changeSpinner(k, d, f);
        c.timeEntry._actionSpinner(k, f);
        c.timeEntry._timer = null;
        c.timeEntry._handlingSpinner = !0;
        a = c.timeEntry._get(k, "spinnerRepeat");
        if (3 <= f && a[0])
          c.timeEntry._timer = setTimeout(function() {
            c.timeEntry._repeatSpinner(k, f)
          }, a[0]), c(d).one("mouseout", c.timeEntry._releaseSpinner).one("mouseup", c.timeEntry._releaseSpinner)
      }
    },
    _actionSpinner : function(a, d) {
      a.input.val() || c.timeEntry._parseTime(a);
      switch(d) {
        case 0:
          this._setTime(a);
          break;
        case 1:
          this._changeField(a, -1, !1);
          break;
        case 2:
          this._changeField(a, 1, !1);
          break;
        case 3:
          this._adjustField(a, 1);
          break;
        case 4:
          this._adjustField(a, -1)
      }
    },
    _repeatSpinner : function(a, d) {
      if (c.timeEntry._timer)
        c.timeEntry._lastInput = c.timeEntry._blurredInput, this._actionSpinner(a, d), this._timer = setTimeout(function() {
          c.timeEntry._repeatSpinner(a, d)
        }, this._get(a,"spinnerRepeat")[1])
    },
    _releaseSpinner : function() {
      clearTimeout(c.timeEntry._timer);
      c.timeEntry._timer = null
    },
    _endExpand : function(a) {
      c.timeEntry._timer = null;
      var a = c.timeEntry._getSpinnerTarget(a), d = c.timeEntry._getInput(a), d = c.data(d, "timeEntry");
      c(a).remove();
      d._expanded = !1
    },
    _endSpinner : function(a) {
      c.timeEntry._timer = null;
      var a = c.timeEntry._getSpinnerTarget(a), d = c.timeEntry._getInput(a), b = c.data(d, "timeEntry");
      c.timeEntry._isDisabledTimeEntry(d) || c.timeEntry._changeSpinner(b, a, -1);
      if (c.timeEntry._handlingSpinner)
        c.timeEntry._lastInput = c.timeEntry._blurredInput;
      c.timeEntry._lastInput && c.timeEntry._handlingSpinner && c.timeEntry._showField(b);
      c.timeEntry._handlingSpinner = !1
    },
    _getSpinnerTarget : function(a) {
      return a.target || a.srcElement
    },
    _getSpinnerRegion : function(a, d) {
      var b = this._getSpinnerTarget(d), k = c.browser.opera || c.browser.safari ? c.timeEntry._findPos(b) : c(b).offset(), f = c.browser.safari ? c.timeEntry._findScroll(b) : [document.documentElement.scrollLeft || document.body.scrollLeft, document.documentElement.scrollTop || document.body.scrollTop], e = this._get(a, "spinnerIncDecOnly"), b = e ? 99 : d.clientX + f[0] - k.left - (c.browser.msie ? 2 : 0), k = d.clientY + f[1] - k.top - (c.browser.msie ? 2 : 0), f = this._get(a, a._expanded ? "spinnerBigSize" : "spinnerSize"), e = e ? 99 : f[0] - 1 - b, q = f[1] - 1 - k;
      if (0 < f[2] && Math.abs(b - e) <= f[2] && Math.abs(k - q) <= f[2])
        return 0;
      f = Math.min(b, k, e, q);
      return f == b ? 1 : f == e ? 2 : f == k ? 3 : 4
    },
    _changeSpinner : function(a, d, b) {
      c(d).css("background-position", "-" + (b + 1) * this._get(a,a._expanded?"spinnerBigSize":"spinnerSize")[0] + "px 0px")
    },
    _findPos : function(a) {
      var c = curTop = 0;
      if (a.offsetParent) {
        c = a.offsetLeft;
        for ( curTop = a.offsetTop; a = a.offsetParent; ) {
          var b = c, c = c + a.offsetLeft;
          0 > c && ( c = b);
          curTop += a.offsetTop
        }
      }
      return {
        left : c,
        top : curTop
      }
    },
    _findScroll : function(a) {
      var d = !1;
      c(a).parents().each(function() {
        d |= "fixed" == c(this).css("position")
      });
      if (d)
        return [0, 0];
      for (var b = a.scrollLeft, k = a.scrollTop; a = a.parentNode; )
        b += a.scrollLeft || 0, k += a.scrollTop || 0;
      return [b, k]
    },
    _get : function(a, d) {
      return null != a.options[d] ? a.options[d] : c.timeEntry._defaults[d]
    },
    _parseTime : function(a) {
      var c = this._extractTime(a), b = this._get(a, "showSeconds");
      c ? (a._selectedHour = c[0], a._selectedMinute = c[1], a._selectedSecond = c[2]) : ( c = this._constrainTime(a), a._selectedHour = c[0], a._selectedMinute = c[1], a._selectedSecond = b ? c[2] : 0);
      a._secondField = b ? 2 : -1;
      a._ampmField = this._get(a, "show24Hours") ? -1 : b ? 3 : 2;
      a._lastChr = "";
      a._field = Math.max(0, Math.min(Math.max(1, a._secondField, a._ampmField), this._get(a, "initialField")));
      "" != a.input.val() && this._showTime(a)
    },
    _extractTime : function(a, c) {
      var c = c || a.input.val(), b = this._get(a, "separator"), k = c.split(b);
      "" == b && "" != c && (k[0] = c.substring(0, 2), k[1] = c.substring(2, 4), k[2] = c.substring(4, 6));
      var f = this._get(a, "ampmNames"), e = this._get(a, "show24Hours");
      return 2 <= k.length ? ( b = !e && -1 < c.indexOf(f[0]), e = !e && -1 < c.indexOf(f[1]), f = parseInt(k[0], 10), f = isNaN(f) ? 0 : f, f = ((b || e) && 12 == f ? 0 : f) + ( e ? 12 : 0), b = parseInt(k[1], 10), b = isNaN(b) ? 0 : b, k = 3 <= k.length ? parseInt(k[2], 10) : 0, k = isNaN(k) || !this._get(a, "showSeconds") ? 0 : k, this._constrainTime(a, [f, b, k])) : null
    },
    _constrainTime : function(a, c) {
      if (null == c)
        var b = this._determineTime(a, this._get(a, "defaultTime")) || new Date, c = [b.getHours(), b.getMinutes(), b.getSeconds()];
      for (var b = !1, e = this._get(a, "timeSteps"), f = 0; f < e.length; f++)
        b ? c[f] = 0 : 1 < e[f] && (c[f] = Math.round(c[f] / e[f]) * e[f], b = !0);
      return c
    },
    _showTime : function(a) {
      var c = this._get(a, "show24Hours"), b = this._get(a, "separator"), c = this._formatNumber( c ? a._selectedHour : (a._selectedHour + 11) % 12 + 1) + b + this._formatNumber(a._selectedMinute) + (this._get(a, "showSeconds") ? b + this._formatNumber(a._selectedSecond) : "") + ( c ? "" : this._get(a, "ampmPrefix") + this._get(a,"ampmNames")[12 > a._selectedHour ? 0 : 1]);
      this._setValue(a, c);
      this._showField(a)
    },
    _showField : function(a) {
      var d = a.input[0];
      if (!(a.input.is(":hidden") || c.timeEntry._lastInput != d)) {
        var b = this._get(a, "separator"), e = b.length + 2, b = a._field != a._ampmField ? a._field * e : a._ampmField * e - b.length + this._get(a, "ampmPrefix").length, e = b + (a._field != a._ampmField ? 2 : this._get(a,"ampmNames")[0].length);
        if (d.setSelectionRange)
          d.setSelectionRange(b, e);
        else if (d.createTextRange) {
          var f = d.createTextRange();
          f.moveStart("character", b);
          f.moveEnd("character", e - a.input.val().length);
          f.select()
        }
        d.disabled || d.focus()
      }
    },
    _formatNumber : function(a) {
      return (10 > a ? "0" : "") + a
    },
    _setValue : function(a, c) {
      c != a.input.val() && a.input.val(c).trigger("change")
    },
    _changeField : function(a, d, b) {
      var e = "" == a.input.val() || a._field == (-1 == d ? 0 : Math.max(1, a._secondField, a._ampmField));
      e || (a._field += d);
      this._showField(a);
      a._lastChr = "";
      c.data(a.input[0], "timeEntry", a);
      return e && b
    },
    _adjustField : function(a, c) {
      "" == a.input.val() && ( c = 0);
      var b = this._get(a, "timeSteps");
      this._setTime(a, new Date(0, 0, 0, a._selectedHour + (0 == a._field ? c * b[0] : 0) + (a._field == a._ampmField ? 12 * c : 0), a._selectedMinute + (1 == a._field ? c * b[1] : 0), a._selectedSecond + (a._field == a._secondField ? c * b[2] : 0)))
    },
    _setTime : function(a, d) {
      var d = this._determineTime(a, d), b = this._constrainTime(a, d ? [d.getHours(), d.getMinutes(), d.getSeconds()] : null), d = new Date(0, 0, 0, b[0], b[1], b[2]), d = this._normaliseTime(d), b = this._normaliseTime(this._determineTime(a, this._get(a, "minTime"))), e = this._normaliseTime(this._determineTime(a, this._get(a, "maxTime"))), d = b && d < b ? b : e && d > e ? e : d, f = this._get(a, "beforeSetTime");
      f && ( d = f.apply(a.input[0], [this._getTimeTimeEntry(a.input[0]), d, b, e]));
      a._selectedHour = d.getHours();
      a._selectedMinute = d.getMinutes();
      a._selectedSecond = d.getSeconds();
      this._showTime(a);
      c.data(a.input[0], "timeEntry", a)
    },
    _normaliseTime : function(a) {
      if (!a)
        return null;
      a.setFullYear(1900);
      a.setMonth(0);
      a.setDate(0);
      return a
    },
    _determineTime : function(a, d) {
      var b = function(a) {
        var b = new Date;
        b.setTime(b.getTime() + 1E3 * a);
        return b
      };
      return d ? "string" == typeof d ? function(b) {
        var d = c.timeEntry._extractTime(a, b), e = new Date, q = d ? d[0] : e.getHours(), w = d ? d[1] : e.getMinutes(), e = d ? d[2] : e.getSeconds();
        if (!d)
          for (var d = /([+-]?[0-9]+)\s*(s|S|m|M|h|H)?/g, D = d.exec(b); D; ) {
            switch(D[2]||"s") {
              case "s":
              case "S":
                e += parseInt(D[1], 10);
                break;
              case "m":
              case "M":
                w += parseInt(D[1], 10);
                break;
              case "h":
              case "H":
                q += parseInt(D[1], 10)
            }
            D = d.exec(b)
          }
        e = new Date(0, 0, 10, q, w, e, 0);
        /^!/.test(b) && (10 < e.getDate() ? e = new Date(0, 0, 10, 23, 59, 59) : 10 > e.getDate() && ( e = new Date(0, 0, 10, 0, 0, 0)));
        return e
      }(d) : "number" == typeof d ? b(d) : d : null
    },
    _handleKeyPress : function(a, c) {
      if (c == this._get(a, "separator"))
        this._changeField(a, 1, !1);
      else if ("0" <= c && "9" >= c) {
        var b = parseInt(c, 10), e = parseInt(a._lastChr + c, 10), f = this._get(a, "show24Hours"), b = this._constrainTime(a, [0 != a._field ? a._selectedHour : f ? 24 > e ? e : b : (1 <= e && 12 >= e ? e : 0 < b ? b : a._selectedHour) % 12 + (12 <= a._selectedHour ? 12 : 0), 1 != a._field ? a._selectedMinute : 60 > e ? e : b, a._field != a._secondField ? a._selectedSecond : 60 > e ? e : b]);
        this._setTime(a, new Date(0, 0, 0, b[0], b[1], b[2]));
        a._lastChr = c
      } else if (!this._get(a, "show24Hours") && ( c = c.toLowerCase(), b = this._get(a, "ampmNames"), c == b[0].substring(0, 1).toLowerCase() && 12 <= a._selectedHour || c == b[1].substring(0, 1).toLowerCase() && 12 > a._selectedHour))
        b = a._field, a._field = a._ampmField, this._adjustField(a, 1), a._field = b, this._showField(a)
    }
  });
  var q = ["getOffset", "getTime", "isDisabled"];
  c.fn.timeEntry = function(a) {
    var d = Array.prototype.slice.call(arguments, 1);
    return "string" == typeof a && -1 < c.inArray(a, q) ? c.timeEntry["_" + a + "TimeEntry"].apply(c.timeEntry, [this[0]].concat(d)) : this.each(function() {
      if ("input" == this.nodeName.toLowerCase())
        if ("string" == typeof a)
          c.timeEntry["_" + a + "TimeEntry"].apply(c.timeEntry, [this].concat(d));
        else {
          var b = c.fn.metadata ? c(this).metadata() : {};
          c.timeEntry._connectTimeEntry(this, c.extend(b, a))
        }
    })
  };
  c.timeEntry = new e
})(jQuery);
/*

 GTmetrix JavaScript Graphing Library

 Copyright 2011, Gossamer Threads Inc.
 Redistribution in part or in whole strictly prohibited.
 */
$.extend(!0, GTmetrix, {
  functions : {
    graph_report_history : function(c, e, w, q) {
      function a(a) {
        if (a && O[a] && confirm("Are you sure you want to delete this report?")) {
          var b = 0, c;
          for (c in y) {
            var d = y[c].series, e;
            for (e in d) {
              var f = d[e].data, k;
              for (k in f)f[k][0] == a && (f.splice(k, 1), b++)
            }
          }
          0 < b ? (D(), J(), ia()) : alert("Could not find data point!");
          $.ajax({
            url : "/dashboard/delete",
            type : "POST",
            dataType : "json",
            data : {
              report_slug : O[a].report_slug
            },
            cache : !1,
            success : function(a) {
              a.success || alert("Error deleting report: " + a.message)
            }
          })
        }
      }

      function d(a) {
        return GTmetrix.dates.format_display_date(a) + " " + GTmetrix.dates.format_display_time(a)
      }

      function b(a, b, c) {
        if (W)
          Z || x(a.data.graph.plot, b) && f(null, c ? c.datapoint[0] : 1E3 * Math.floor(b.x / 1E3), b.pageX + 5, b.pageY + 5);
        else if (c)
          ( b = y[0].aggregate_ranges[c.datapoint[0]]) ? (I(a), ca(b.min, b.max)) : window.location.href = O[c.datapoint[0]].report_url
      }

      function k(a, b, c) {
        a = $('<div id="graph-tip" class="tooltip">' + a + "</div>");
        a.css({
          position : "absolute",
          top : c,
          left : b
        }).appendTo(document.body).fadeIn(200);
        setTimeout(function() {
          X = 1
        }, 750);
        return a
      }

      function f(a, b, c, d) {
        t();
        Z = !0;
        null != a && ( b = ha(a));
        var f = $("input[name=page_id]").val(), n = GTmetrix.dates.format_display_date(b), m = GTmetrix.dates.format_display_time(b), r = '<li><button class="tiny-save-button" id="graph-tip-buttons-save">Save</button></li>';
        null != a && (r += '<li><button class="tiny-delete-button" id="graph-tip-buttons-delete">Delete</button></li>');
        n = '<div class="graph-tip-addnote clear"><div class="graph-tip-addnote-header clear"><div id="graph-tip-date">' + n + '</div><div class="graph-tip-addnote-time"><label for="graph-tip-time">Time</label><input type="text" id="graph-tip-time" value="' + m + '" class="input-text" /></div></div><div class="graph-tip-addnote-body"><textarea id="graph-tip-note">' + (null == a ? "" : H[a][2]) + '</textarea><br /><ul class="graph-tip-buttons clear">' + (r + '<li><button class="tiny-cancel-button" id="graph-tip-buttons-cancel">Cancel</button></li>') + "</ul></div></div>";
        D();
        k(n, c, d);
        $("#graph-tip-date").dateinput({
          selectors : !0,
          trigger : !0,
          format : "dd mmm yyyy",
          min : -500,
          max : "0",
          css : {
            input : "input-date"
          }
        });
        $("#graph-tip-date").bind("onShow onHide", function() {
          $(this).parent().toggleClass("calactive")
        });
        $("#graph-tip-date").data("dateinput").change(function() {
          var a = GTmetrix.dates.get_annotate_calendar_value();
          $("#graph-tip-date").html(GTmetrix.dates.format_display_date(a))
        });
        GTmetrix.dates.set_annotate_calendar_min_max_ms(min_time_ms, max_time_ms);
        GTmetrix.dates.set_annotate_calendar_value(b);
        $("#graph-tip-time").timeEntry({
          show24Hours : !0,
          defaultTime : m,
          spinnerImage : ""
        });
        $("#graph-tip-buttons-save").bind("click", function() {
          $(this).addClass("graph-tip-buttons-disabled").prop("disabled", !0);
          var b = GTmetrix.dates.get_annotate_calendar_value(), c = $("#graph-tip-time").timeEntry("getOffset"), b = 1E3 * Math.floor((b + c) / 1E3), d = b - GTmetrix.dates.get_server_offset_ms(b), g = $("#graph-tip-note").val(), c = $("input[name=page_id]").val();
          if (0 === g.length)
            return GTmetrix.errors.show($("#graph-tip-note"), "Please enter a note"), !1;
          null == a || b != ha(a) || g != (null == a ? "" : H[a][2]) ? $.ajax({
            url : e.annotate,
            type : "POST",
            dataType : "json",
            cache : !1,
            data : {
              page_id : c,
              annotate_id : null == a ? null : H[a][1],
              date : d,
              details : g
            },
            success : function(b) {
              b && b.success ? (null == a ? ( b = b.payload.annotate_id, a = H.length, H.push([d, b, g])) : (H[a][0] = d, H[a][2] = g), H[a][2] = g, V(), ia()) : ($("#graph-tip-buttons-save").prop("disabled", !1), alert(b.message))
            }
          }) : V()
        });
        (function() {
          $("#graph-tip-buttons-delete").unbind();
          $("#graph-tip-buttons-delete").removeClass("graph-tip-buttons-disabled");
          $("#graph-tip-buttons-delete").bind("click", function() {
            $(this).addClass("graph-tip-buttons-disabled").prop("disabled", !0);
            $.ajax({
              url : e.annotate,
              type : "POST",
              dataType : "json",
              cache : !1,
              data : {
                page_id : f,
                annotate_id : null == a ? null : H[a][1],
                annotate_delete : 1
              },
              success : function(b) {
                b && b.success ? (H.splice(a, 1), a = null, ia()) : ($("#graph-tip-buttons-delete").prop("disabled", !1), alert(b.message))
              }
            })
          });
          $("#graph-tip-buttons-cancel").bind("click", function() {
            V()
          })
        })()
      }

      function I(a, b, c) {
        W ? Z || (x(a.data.graph.plot, b) ? na() : t()) : fa(a, b, c)
      }

      function x(a, b) {
        var c = a.offset();
        return b.pageX >= c.left && b.pageX <= c.left + a.width() && b.pageY >= c.top && b.pageY <= c.top + a.height()
      }

      function fa(b, e, g) {
        if (g) {
          if ( e = b.data.graph, Y != g.datapoint[0] + g.datapoint[1]) {
            D();
            Y = g.datapoint[0] + g.datapoint[1];
            $(b.target).addClass("graph-plot-hover-display");
            var b = e.aggregate_ranges[g.datapoint[0]], f = g.datapoint[1];
            ( e = e.hover_formatter) && ( f = e(f));
            e = ( b ? "<h4>" + d(b.min) + " ... " + d(b.max) + "</h4>" : "<h4>" + d(g.datapoint[0]) + "</h4>") + "<p><label>" + g.series.label + ":</label> " + f + ( b ? " (average)" : "") + "</p>";
            b ? e += '<p class="graph-tip-links"><a href="#" id="graph-aggregate-zoom">Zoom in (' + b.count + " reports)</a></p>" : O && (O[g.datapoint[0]].report_slug != c ? (e += '<p class="graph-tip-links"><a href="' + O[g.datapoint[0]].report_url + '" title="View this report">View Report</a> | <a href="/compare/' + c + "/" + O[g.datapoint[0]].report_slug + '" title="Compare this report to the current report">Compare to</a>', w && (e += ' | <a href="#" id="graph-tip-delete">Delete</a>'), e += "</p>") : e += '<p class="graph-tip-links">(Currently viewing this report)</p>');
            k(e, g.pageX + 5, g.pageY + 5);
            $("#graph-tip-delete").click(function() {
              a(g.datapoint[0]);
              return !1
            });
            b && $("#graph-aggregate-zoom").bind("click", b, function(a) {
              I(a);
              ca(a.data.min, a.data.max);
              return !1
            })
          }
        } else
          Y && $(b.target).removeClass("graph-plot-hover-display"), D(!0)
      }

      function D(a) {
        if (!a || X)
          X = 0, $("#graph-tip").remove();
        Y = null
      }

      function z(a, b) {
        return a.toFixed( b ? b.tickDecimals : 2) + " s"
      }

      function s(a, b) {
        return a.toFixed( b ? b.tickDecimals : 0) + "%"
      }

      function r(a, b) {
        var c;
        c = b ? b.tickDecimals : 2;
        return 1048576 <= a ? (a / 1048576).toFixed(c) + " MB" : 1024 <= a ? (a / 1024).toFixed(c) + " KB" : 512 <= a ? a.toFixed(c) + " B" : a.toFixed( b ? c : 0)
      }

      function ga(a, b, c) {
        function d(a, b, c, g, h) {
          if (1 <= c) {
            for (var e = 1E3 * Math.floor((a + b) / 2 / 1E3), f = 0; f < g.length; f++) {
              var l = null != h[f] ? h[f] : 0, k = c - l;
              B[f].data.push([e, k > l ? g[f] / k : null])
            }
            1 < c && (y[e] = {
              min : a,
              max : b,
              count : c
            })
          }
        }

        var e = GTmetrix.dates.ms_in_a_day, f = 100 * e, k = c - b;
        if (k <= 1.4 * e)
          return {
            series : a,
            ranges : {}
          };
        for (var n = 0, e = 0; e < a[0].data.length; e++) {
          var r = a[0].data[e][0];
          r >= b && r <= c && n++
        }
        if (10 > n)
          return {
            series : a,
            ranges : {}
          };
        for (var B = [], b = 0; b < a.length; b++) {
          e = {
            data : [],
            label : a[b].label
          };
          if (a[b].yaxis)
            e.yaxis = a[b].yaxis;
          B.push(e)
        }
        for (var c = null, n = [], v = null, q = 0, s = null, t = null, y = {}, e = 0; e < a[0].data.length; e++) {
          r = a[0].data[e][0];
          id = k > f ? GTmetrix.dates.trunc_server_ms_to_local_date(r).getWeekUnique() : GTmetrix.dates.trunc_server_ms_to_local_date(r).getDayUnique();
          if (null == v) {
            v = [];
            for ( b = 0; b < a.length; b++)
              v.push(a[b].data[e][1]);
            t = s = r
          } else {
            for ( b = 0; b < a.length; b++) {
              var x = a[b].data[e][1];
              null == x ? n[b] = n[b] ? n[b] + 1 : 1 : v[b] += x
            }
            r < s ? s = r : r > t && ( t = r)
          }
          q++;
          null != c && c != id && (d(s, t, q, v, n), v = null, q = 0, n = []);
          c = id
        }
        1 <= q && d(s, t, q, v, n);
        return {
          series : B,
          ranges : y
        }
      }

      function ha(a) {
        a = null == a ? "" : H[a][0];
        return a += GTmetrix.dates.get_server_offset_ms(a)
      }

      function n() {
        W = !1;
        $(".graph-controls .add-note-button").each(function() {
          $(this).removeClass("add-note-button-disabled");
          $(this).unbind();
          $(this).bind("click", function(a) {
            a.preventDefault();
            sa($(this).closest(".graph-container"), !1)
          })
        })
      }

      function sa(a, b) {
        W && Z != b && V();
        W = !0;
        Z = b;
        a.find(".graph-plot").removeClass("graph-plot-hover-display");
        Z || (na(), $(".graph-controls .add-note-button").each(function() {
          $(this).addClass("add-note-button-disabled");
          $(this).unbind();
          $(this).bind("click", function(a) {
            a.preventDefault();
            V()
          })
        }))
      }

      function na() {
        $(".graph-plot").each(function() {
          $(this).addClass("add-note-crosshairs")
        })
      }

      function t() {
        $(".add-note-crosshairs").each(function() {
          $(this).removeClass("add-note-crosshairs")
        })
      }

      function V() {
        t();
        D();
        W = !1;
        n()
      }

      function J() {
        max_time_ms = min_time_ms = null;
        for (var a in y) {
          var b = y[a].series, c;
          for (c in b) {
            var d = b[c].data, e = d[d.length-1][0], d = d[0][0];
            if (!min_time_ms || e < min_time_ms)
              min_time_ms = e;
            if (!max_time_ms || d > max_time_ms)
              max_time_ms = d
          }
        }
        GTmetrix.dates.set_min_max_ms(min_time_ms, max_time_ms);
        GTmetrix.dates.set_view_range_ms(min_time_ms, max_time_ms)
      }

      function oa(a) {
        if (a) {
          a.graphs = [];
          y = a.graphs;
          var b = a.config, c = [{
            name : "time",
            label : ["HTML D/L Time", "Page Load Time"]
          }, {
            name : "size",
            label : ["Total Page Elements", "HTML Size", "Total Page Size"]
          }, {
            name : "score",
            label : ["Page Speed Score", "YSlow Score"]
          }];
          for (i in c)
          for (j in y[i] = {}, y[i].series = [], y[i].name = c[i].name, c[i].label)y[i].series[j] = {}, y[i].series[j].data = [], y[i].series[j].label = c[i].label[j];
          y[1].series[0].yaxis = 2;
          var c = parseInt(b.timestamp_offset), d = "page_onloadtime,page_elements,page_time,page_totalsize,page_size,yslow_score,pagespeed_score,report_slug".split(","), e = {};
          for (i in a.data_index) {
            for (j in a.data_index[i])
            a.data_index[i][d[j]] = a.data_index[i][j];
            var f = 1E3 * (parseInt(i) + c);
            e[f] = [];
            for (j in a.data_index[i])
            e[f][j] = a.data_index[i][j];
            e[f].created = f;
            e[f].report_url = b.base_url + e[f].report_slug
          }
          a.data_index = e;
          for (i in a.data_index)
          for (key in a.data_index[i]) {
            c = b = -1;
            d = a.data_index[i].created;
            e = a.data_index[i][key];
            if ("page_time" == key || "page_onloadtime" == key)
              b = 0, "page_time" == key && ( c = 0), "page_onloadtime" == key && ( c = 1);
            if ("page_elements" == key || "page_size" == key || "page_totalsize" == key)
              b = 1, "page_elements" == key && ( c = 0), "page_size" == key && ( c = 1), "page_totalsize" == key && ( c = 2);
            if ("pagespeed_score" == key || "yslow_score" == key)
              b = 2, "pagespeed_score" == key && ( c = 0), "yslow_score" == key && ( c = 1);
            0 <= b && 0 <= c && a.graphs[b].series[c].data.push([d, e])
          }
          for (i in y)
          for (j in y[i].series)y[i].series[j].data.sort(), y[i].series[j].data.reverse();
          GTmetrix.dates.init("#date-first", "#date-last");
          J();
          O = a.data_index;
          if (!q)
            H = a.annotations;
          P = 1
        }
        if ($("#report-history:visible").length && P && !S) {
          var a = {
            time : {
              options : {},
              formatter : z
            },
            size : {
              options : {
                yaxis : {
                  tickFormatter : r
                },
                y2axis : {
                  min : 0,
                  tickDecimals : 0,
                  tickFormatter : null
                }
              },
              formatter : r
            },
            score : {
              options : {
                yaxis : {
                  max : 100,
                  tickDecimals : 0,
                  tickFormatter : s
                }
              },
              formatter : s
            }
          }, k;
          for (k in y) b = y[k], c = b.name, qa(b, a[c].options, a[c].formatter);
          GTmetrix.dates.calendar_first && GTmetrix.dates.calendar_last && (GTmetrix.dates.calendar_first().bind("onHide", function(a) {
            var b = GTmetrix.dates.get_view_range_ms();
            L(a, {
              xaxis : {
                from : b.min,
                to : b.max
              }
            })
          }), GTmetrix.dates.calendar_last().bind("onHide", function(a) {
            var b = GTmetrix.dates.get_view_range_ms();
            L(a, {
              xaxis : {
                from : b.min,
                to : b.max
              }
            })
          }));
          w && n();
          try {
            L(null, {
              xaxis : {
                from : min_time_ms,
                to : max_time_ms
              }
            }), S = 1
          } catch(t) {
            alert("Graphing error: " + t), S = 0
          }
        }
      }

      function qa(a, b, c) {
        var d = $("#performance-" + a.name + "-legend"), e = {};
        $.extend(!0, e, {
          lines : {
            show : !0
          },
          points : {
            show : !0
          },
          grid : {
            hoverable : !0,
            clickable : !0,
            autoHighlight : !0
          },
          xaxis : {
            mode : "time"
          },
          yaxis : {
            tickFormatter : z,
            labelWidth : 40
          },
          y2axis : {
            labelWidth : 20
          },
          legend : {
            container : d,
            noColumns : 3
          },
          selection : {
            mode : "x"
          }
        }, b);
        a.options = e;
        a.hover_formatter = c
      }

      function ia() {
        var a = GTmetrix.dates.get_view_range_ms();
        L(null, {
          xaxis : {
            from : a.min,
            to : a.max
          }
        })
      }

      function pa(a) {
        var b = GTmetrix.dates.get_view_range_ms(), c = b.max - b.min, a = 1E3 * a * Math.floor(0.5 * c / 1E3);
        ja(b.min + a, b.max + a, c)
      }

      function ca(a, b) {
        var c = 0.2 * (b - a);
        L(null, {
          xaxis : {
            from : a - c,
            to : b + c
          }
        })
      }

      function ja(a, b, c) {
        a = Math.max(min_time_ms, Math.min(a, b - c));
        b = Math.min(max_time_ms, Math.max(b, a + c));
        a = Math.max(min_time_ms, Math.min(a, b - c));
        L(null, {
          xaxis : {
            from : a,
            to : b
          }
        })
      }

      function Q(a, b, c) {
        var d = 0, e = 0, f;
        for (f in a) {
          var k = a[f].data, n;
          for (n in k) {
            var r = k[n][0], q = k[n][1];
            if (!(r < b || r > c) || !(-1 !== b || -1 !== c))
              0 == d && ( d = q), 0 == e && ( e = q), q < d && ( d = q), q > e && ( e = q)
          }
        }
        return {
          min : d - 0.25 * d,
          max : 1.25 * e
        }
      }

      function L(a, c) {
        W && V();
        D();
        var d = 1E3 * Math.floor(c.xaxis.from / 1E3), e = 1E3 * Math.floor(c.xaxis.to / 1E3);
        d < min_time_ms && ( d = min_time_ms);
        e > max_time_ms && ( e = max_time_ms);
        var f = e - d;
        6E4 > f && ( e = d + 6E4);
        var k = 2592E5 < f ? "%b %d" : "%b %d %h:%M%P", m, n, r;
        for (r in y) {
          var q = y[r], v = $("#performance-" + q.name + "-graph");
          $("#performance-" + q.name + "-controls");
          v.unbind();
          m = ga(q.series, d, e);
          var s = m.series[0].data, t = s[s.length-1][0], s = s[0][0];
          d < t && ( d = t);
          e > s && ( e = s);
          q.viewable = {
            min : d,
            max : e
          };
          var x = {
            xaxis : {
              min : d,
              max : e,
              timeformat : k
            }
          };
          if ("time" === q.name || "score" == q.name) {
            var w = Q(m.series, d, e), z = w.min, w = w.max;
            if (0 == z && 0 == w)
              w = Q(m.series, -1, -1), z = w.min, w = w.max;
            "score" == q.name && 100 < w && ( w = 100);
            1 > z && ( z = 0);
            x.yaxis = {
              min : z,
              max : w,
              timeformat : k
            }
          } else if ("size" === q.name) {
            z = [];
            z.size = [];
            z.elements = [];
            w = Q(m.series.slice(0, 1), d, e);
            z.elements.min = w.min;
            z.elements.max = w.max;
            w = Q(m.series.slice(1, 3), d, e);
            z.size.min = w.min;
            z.size.max = w.max;
            for (key in z)
            if (0 == z[key].min && 0 == z[key].max)
              w = Q(m.series, -1, -1), z[key].min = w.min, z[key].max = w.max;
            x.yaxis = {
              min : z.size.min,
              max : z.size.max
            };
            x.y2axis = {
              min : z.elements.min,
              max : z.elements.max
            }
          }
          q.aggregate_ranges = m.ranges;
          q.plot = $.plot(v, m.series, $.extend(!0, {}, q.options, x));
          N(q);
          $(".graph-controls-pan li").each(function() {
            $(this).removeClass("pan-disabled");
            $(this).unbind()
          });
          d == min_time_ms || d == t ? $(".graph-controls-pan .pan-left").each(function() {
            $(this).addClass("pan-disabled")
          }) : $(".graph-controls-pan .pan-left").each(function() {
            $(this).bind("click", function(a) {
              a.preventDefault();
              pa(-1)
            })
          });
          e == max_time_ms || e == s ? $(".graph-controls-pan .pan-right").each(function() {
            $(this).addClass("pan-disabled")
          }) : $(".graph-controls-pan .pan-right").each(function() {
            $(this).bind("click", function(a) {
              a.preventDefault();
              pa(1)
            })
          });
          m = q.aggregate_ranges[d] ? q.aggregate_ranges[d].min : d;
          n = q.aggregate_ranges[e] ? q.aggregate_ranges[e].max : e;
          var F = {
            "1d" : 1,
            "1w" : 7,
            "1m" : 30,
            "3m" : 91,
            "6m" : 183,
            "1y" : 365
          };
          $(".graph-controls-zoom li").each(function() {
            $(this).removeClass("zoom-selected zoom-selected-first zoom-selected-last zoom-disabled");
            $(this).unbind()
          });
          var H = function(a, b) {
            if (b <= max_time_ms - min_time_ms) {
              if (a.bind("click", {
                durationMs : b
              }, function(a) {
                a.preventDefault();
                var a = a.data.durationMs, b = n;
                if (!b)
                  b = GTmetrix.dates.get_view_range_ms().max;
                ja(b - a, b, a)
              }), 2592E5 > Math.abs(b - f)) {
                var c = "zoom-selected";
                a.filter(":first-child").length ? c += "-first" : a.filter(":last-child").length && (c += "-last");
                a.addClass(c)
              }
            } else
              a.addClass("zoom-disabled")
          };
          $(".graph-controls-zoom li").each(function() {
            var a = $(this).text(), a = "All" == a ? max_time_ms - min_time_ms : 864E5 * F[a];
            H($(this), a)
          });
          v.bind("plotclick", {
            graph : q
          }, b);
          v.bind("plothover", {
            graph : q
          }, I);
          v.bind("plotselected", {
            graph : q
          }, L)
        }
        GTmetrix.dates.set_view_range_ms(m, n)
      }

      function N(a) {
        if (H && !q)
          for (var b = a.plot, c = $("#performance-" + a.name + "-graph"), a = a.viewable, e = b.getCanvas().getContext("2d"), k = b.offset().top - c.offset().top, n = b.height(), m = k - 7, r = b.offset().left - c.offset().left, s = 0; s < H.length; s++) {
            var t = H[s][0], t = t + GTmetrix.dates.get_server_offset_ms(t);
            if (t >= a.min && t <= a.max) {
              var v = b.pointOffset({
                x : t,
                y : 0
              }), x = v.left, y = x + -4, t = $('<div class="graph-annotation-icon" style="left:' + y + "px; top:" + m + 'px;"></div>').appendTo(c).bind("mouseenter", {
                time : t,
                text : H[s][2],
                top : m,
                left : y
              }, function(a) {
                $(this).addClass("graph-annotation-icon-hover");
                var e = " left: " + a.data.left + "px;";
                a.data.left > 3 * b.width() / 4 && ( e = " right: " + (b.width() + r - a.data.left) + "px;");
                e += " top:" + a.data.top + "px;";
                $('<div class="graph-annotation-tooltip tooltip" style="' + e + '"><h4>' + d(a.data.time) + "</h4>" + a.data.text + "</div>").appendTo(c)
              }).bind("mouseleave", {}, function() {
                $(this).removeClass("graph-annotation-icon-hover");
                $(".graph-annotation-tooltip").remove()
              });
              w && t.bind("click", {
                annotate_index : s,
                left : v.left
              }, function(a) {
                var b = $(this).offset();
                sa($(this).closest(".graph-container"), !0);
                f(a.data.annotate_index, null, b.left - 20, b.top + 20)
              });
              e.beginPath();
              e.lineWidth = 1;
              e.strokeStyle = $.color.parse("#a1c6e6").toString();
              e.moveTo(x, k);
              e.lineTo(x, k + n);
              e.stroke()
            }
          }
      }

      var P = 0, S = 0, O, H = [], Y = null, X = null, W = !1, Z = !1, y = [];
      Date.prototype.getDayUnique = function() {
        return 366 * this.getYear() + 31 * this.getMonth() + this.getDate()
      };
      Date.prototype.getWeekUnique = function() {
        return Math.floor(this.getDayUnique() / 7)
      };
      $.ajax({
        url : e.graph,
        type : "GET",
        dataType : "json",
        success : oa,
        cache : !1
      });
      if ($(".tabs").data("tabs"))
        $(".tabs").data("tabs").onClick(function(a, b) {
          "report-history" == this.getPanes().get(b).id && oa();
          D()
        })
    }
  },
  dates : {
    ms_in_a_day : 864E5,
    calendar_first : null,
    calendar_last : null,
    no_calendar_view_range_min : null,
    no_calendar_view_range_max : null,
    get_server_offset_ms : function(c) {
      for (var c = Math.floor(c / 1E3), e = 0; e < this.timezone_offsets_vancouver.length; e++)
        if (c > this.timezone_offsets_vancouver[e][0])
          return 1E3 * this.timezone_offsets_vancouver[e][1];
      return 0
    },
    get_local_offset_ms : function(c) {
      var e = 0 - 6E4 * (new Date(c)).getTimezoneOffset();
      return this.get_server_offset_ms(c) - e
    },
    init : function(c, e) {
      if (c && $(c).length && e && $(e).length)
        this.calendar_first = function() {
          return $(c)
        }, this.calendar_last = function() {
          return $(e)
        }, this.calendar_first().dateinput({
          selectors : !0,
          trigger : !0,
          format : "dd mmmm yyyy",
          min : -500,
          max : "0",
          css : {
            input : "input-date"
          }
        }), this.calendar_last().dateinput({
          selectors : !0,
          trigger : !0,
          format : "dd mmmm yyyy",
          min : -500,
          max : "0",
          css : {
            input : "input-date"
          }
        }), this.calendar_first().bind("onShow onHide", function() {
          $(this).parent().toggleClass("calactive")
        }), this.calendar_last().bind("onShow onHide", function() {
          $(this).parent().toggleClass("calactive")
        }), this.calendar_first().data("dateinput").change(function() {
          GTmetrix.dates.calendar_last().data("dateinput").setMin(this.getValue(), !0)
        })
    },
    trunc_server_ms_to_local_date : function(c) {
      c = new Date(c);
      return new Date(c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate(), 0, 0, 0, 0)
    },
    set_min_max_ms : function(c, e) {
      if (this.calendar_first && this.calendar_last) {
        var w = this.trunc_server_ms_to_local_date(c), q = this.trunc_server_ms_to_local_date(e);
        this.calendar_first().data("dateinput").setMin(w);
        this.calendar_last().data("dateinput").setMax(q)
      } else
        this.no_calendar_view_range_min = c, this.no_calendar_view_range_min = e
    },
    get_view_range_ms : function() {
      var c, e;
      this.calendar_first && this.calendar_last ? ( c = this.calendar_first().data("dateinput").getValue().getTime(), e = this.calendar_last().data("dateinput").getValue().getTime(), c -= this.get_local_offset_ms(c), e -= this.get_local_offset_ms(e), c += this.get_server_offset_ms(c), e += this.get_server_offset_ms(e)) : ( c = this.no_calendar_view_range_min, e = this.no_calendar_view_range_max);
      return {
        min : c,
        max : e
      }
    },
    set_view_range_ms : function(c, e) {
      this.calendar_first && this.calendar_last ? (c -= this.get_server_offset_ms(c), e -= this.get_server_offset_ms(e), c += this.get_local_offset_ms(c), e += this.get_local_offset_ms(e), this.calendar_first().data("dateinput").setValue(new Date(c)), this.calendar_last().data("dateinput").setValue(new Date(e))) : (this.no_calendar_view_range_min = c, this.no_calendar_view_range_min = e)
    },
    set_annotate_calendar_min_max_ms : function(c, e) {
      var w = this.trunc_server_ms_to_local_date(c), q = this.trunc_server_ms_to_local_date(e);
      $("#graph-tip-date").data("dateinput").setMin(w);
      $("#graph-tip-date").data("dateinput").setMax(q)
    },
    get_annotate_calendar_value : function() {
      var c = $("#graph-tip-date").data("dateinput").getValue();
      return Date.UTC(c.getFullYear(), c.getMonth(), c.getDate(), 0, 0, 0)
    },
    set_annotate_calendar_value : function(c) {
      c = this.trunc_server_ms_to_local_date(c);
      $("#graph-tip-date").data("dateinput").setValue(c)
    },
    format_display_date : function(c) {
      c = new Date(c);
      return "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(",")[c.getUTCDay()] + ", " + "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(",")[c.getUTCMonth()] + " " + c.getUTCDate() + ", " + c.getUTCFullYear()
    },
    format_display_time : function(c) {
      var e = new Date(c), c = e.getUTCHours(), e = e.getUTCMinutes();
      return (10 > c ? "0" : "") + c + ":" + (10 > e ? "0" : "") + e
    },
    timezone_offsets_vancouver : [[1225702800, -28800], [1236592800, -25200], [1257152400, -28800], [1268647200, -25200], [1289206800, -28800], [1300096800, -25200], [1320656400, -28800], [1331546400, -25200], [1352106E3, -28800], [1362996E3, -25200], [1383555600, -28800], [1394445600, -25200], [1415005200, -28800], [1425895200, -25200], [1446454800, -28800], [1457949600, -25200], [1478509200, -28800], [1489399200, -25200], [1509958800, -28800], [1520848800, -25200], [1541408400, -28800], [1552298400, -25200], [1572858E3, -28800], [1583748E3, -25200], [1604307600, -28800], [1615802400, -25200], [1636362E3, -28800], [1647252E3, -25200], [1667811600, -28800], [1678701600, -25200], [1699261200, -28800], [1710151200, -25200], [1730710800, -28800], [1741600800, -25200], [1762160400, -28800], [1773050400, -25200], [179361E4, -28800], [1805104800, -25200], [1825664400, -28800], [1836554400, -25200], [1857114E3, -28800], [1868004E3, -25200], [1888563600, -28800], [1899453600, -25200], [1920013200, -28800], [1930903200, -25200], [1951462800, -28800], [1962957600, -25200]]
  }
});
